// COPYRIGHT Â© 2018 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.11/esri/copyright.txt for details.

define(["require","exports","../core/tsSupport/assignHelper","../core/tsSupport/declareExtendsHelper","../core/tsSupport/decorateHelper","../PopupTemplate","../renderers","../request","../core/Error","../core/Logger","../core/promiseUtils","../core/urlUtils","../core/watchUtils","../core/accessorSupport/decorators","../core/accessorSupport/PropertyOrigin","../core/accessorSupport/utils","./FeatureLayer","./Layer","./mixins/SceneService","./support/commonProperties","./support/commonProperties","./support/FeatureReduction","./support/FeatureReductionSelection","./support/Field","./support/fieldUtils","./support/LabelClass","./support/labelingInfo","./support/RangeInfo","../portal/PortalItem","../renderers/support/jsonUtils","../renderers/support/styleUtils","../support/popupUtils","../tasks/support/Query"],function(e,r,t,o,n,i,a,s,p,l,u,d,c,y,f,h,v,g,m,I,b,w,S,F,L,j,_,E,A,O,T,P,R){function U(e,r,t){return e&&((e=O.read(e,r,t)||void 0)||D.error("Failed to create renderer",{rendererDefinition:e,layer:this,context:t})),e}var x=["3DObject","Point"],D=l.getLogger("esri.layers.SceneLayer"),q=function(r){function l(e,t){var o=r.call(this)||this;return o.featureReduction=null,o.rangeInfos=null,o.operationalLayerType="ArcGISSceneServiceLayer",o.type="scene",o.fields=[],o.definitionExpression=null,o.path=null,o.labelsVisible=!0,o.labelingInfo=null,o.legendEnabled=!0,o.cachedDrawingInfo={color:!1},o.popupEnabled=!0,o.popupTemplate=null,o.objectIdField=null,o.objectIdFilter=null,o._fieldUsageInfo={},o.screenSizePerspectiveEnabled=!0,o}return o(l,r),l.prototype.normalizeCtorArgs=function(e,r){return"string"==typeof e?t({url:e},r):e},l.prototype.getField=function(e){return L.getField(this.fields,e)},Object.defineProperty(l.prototype,"elevationInfo",{set:function(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"geometryType",{get:function(){return C[this.profile]||"mesh"},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"renderer",{set:function(e){L.fixRendererFields(e,this.fields),this._set("renderer",e)},enumerable:!0,configurable:!0}),l.prototype.readCachedDrawingInfo=function(e,r){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e},Object.defineProperty(l.prototype,"defaultPopupTemplate",{get:function(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null},enumerable:!0,configurable:!0}),l.prototype.readObjectIdField=function(e,r){return!e&&r.fields&&r.fields.some(function(r){return"esriFieldTypeOID"===r.type&&(e=r.name),!!e}),e||void 0},l.prototype.readProfile=function(e,r){var t=r.store.profile;return null!=t&&Q[t]?Q[t]:(D.error("Unknown or missing profile",{profile:t,layer:this}),"mesh-pyramids")},l.prototype.load=function(){var e=this,r=this.loadFromPortal({supportedTypes:["Scene Service"]}).then(function(){return e._fetchService()},function(){return e._fetchService()}).then(function(){return u.all([e._verifyRootNodeAndUpdateExtent(),e._setAssociatedFeatureLayer()])}).then(function(){return e._validateElevationInfo()}).then(function(){return e._applyAssociatedLayerOverrides()}).then(function(){return e._populateFieldUsageInfo()}).then(function(){return T.loadStyleRenderer(e,{origin:"service"})}).then(function(){return L.fixRendererFields(e.renderer,e.fields)});return this.addResolvingPromise(r),this.when()},l.prototype.createLayerView=function(r){var t,o=this;return t=null==this.profile||"mesh-pyramids"===this.profile?u.create(function(r){return e(["../views/3d/layers/SceneLayerView3D"],r)}):u.create(function(r){return e(["../views/3d/layers/SceneLayerGraphicsView3D"],r)}),t.then(function(e){return new e({view:r,layer:o})})},l.prototype.createQuery=function(){var e=new R;return"mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e},l.prototype.queryExtent=function(e){var r=this;return this._getAssociatedLayerForQuery().then(function(t){return t.queryExtent(e||r.createQuery())})},l.prototype.queryFeatureCount=function(e){var r=this;return this._getAssociatedLayerForQuery().then(function(t){return t.queryFeatureCount(e||r.createQuery())})},l.prototype.queryFeatures=function(e){var r=this;return this._getAssociatedLayerForQuery().then(function(t){return t.queryFeatures(e||r.createQuery())}).then(function(e){if(e&&e.features)for(var t=0,o=e.features;t<o.length;t++){var n=o[t];n.layer=r,n.sourceLayer=r}return e})},l.prototype.queryObjectIds=function(e){var r=this;return this._getAssociatedLayerForQuery().then(function(t){return t.queryObjectIds(e||r.createQuery())})},l.prototype.getFieldUsageInfo=function(e){var r={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||r:(D.error("#getFieldUsageInfo()","Unavailable until layer is loaded"),r)},l.prototype.createPopupTemplate=function(e){return P.createPopupTemplate(this,e)},l.prototype._getAssociatedLayerForQuery=function(){var e=this;if(!this.loaded)return this.load().then(function(){return e._getAssociatedLayerForQuery()});var r=this.associatedLayer;return null!=r?u.resolve(r):u.reject(new p("scenelayer:query-not-available","SceneLayer queries are not available without associated feature layer"))},l.prototype.hasCachedStatistics=function(e){return null!=this.statisticsInfo&&this.statisticsInfo.some(function(r){return r.name===e})},l.prototype.queryCachedStatistics=function(e){if(!this.hasCachedStatistics(e))return u.reject(new p("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available"));for(var r=0,t=this.statisticsInfo;r<t.length;r++){var o=t[r];if(o.name===e){var n=d.join(this.parsedUrl.path,o.href);return s(n,{query:{f:"json"},responseType:"json"}).then(function(e){return e.data})}}},l.prototype._validateLayer=function(e){if(e.layerType&&-1===x.indexOf(e.layerType))throw new p("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new p("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new p("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});!function(e,r){var t=!1,o=!1;if(null==e)t=!0,o=!0;else{var n=r&&r.isGeographic;switch(e){case"east-north-up":case"earth-centered":t=!0,o=n;break;case"vertex-reference-frame":t=!0,o=!n;break;default:t=!1}}if(!t)throw new p("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!o)throw new p("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}(this.normalReferenceFrame,this.spatialReference)},l.prototype._populateFieldUsageInfo=function(){if(this._fieldUsageInfo={},this.fields)for(var e=this,r=0,t=this.fields;r<t.length;r++){var o=t[r];!function(r){var t=!(!e.attributeStorageInfo||!e.attributeStorageInfo.some(function(e){return e.name===r.name})),o=!!(e.associatedLayer&&e.associatedLayer.fields&&e.associatedLayer.fields.some(function(e){return e&&r.name===e.name})),n={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||o,supportsLayerQuery:o};e._fieldUsageInfo[r.name]=n}(o)}},l.prototype._applyAssociatedLayerOverrides=function(){if(this.associatedLayer){if(this.associatedLayer.fields)for(var e=0,r=this.associatedLayer.fields;e<r.length;e++){var t=r[e];this.getField(t.name)||this.fields.push(t.clone())}for(var o=["popupTemplate","popupEnabled"],n=h.getProperties(this),i=0;i<o.length;i++){var a=o[i];this._buddyIsMoreImportant(a)&&(n.setDefaultOrigin(this.associatedLayer.originOf(a)),n.set(a,this.associatedLayer[a]),n.setDefaultOrigin("user"))}}},l.prototype._setAssociatedFeatureLayer=function(){var e=this;return this._fetchAssociatedFeatureLayer().then(function(r){e.associatedLayer=r})},l.prototype._fetchAssociatedFeatureLayer=function(){var e,r=this;return-1===["mesh-pyramids","points"].indexOf(this.profile)?u.resolve(null):(e=this.portalItem&&this.portalItem.isResolved()?this._fetchAssociatedFeatureLayerFromRelatedItems(this.portalItem):this._fetchAssociatedFeatureLayerFromUrl(),e.then(function(e){return e.load()}).catch(function(e){return c.whenValidOnce(r,["popupTemplate","popupEnabled"],function(){return r.popupEnabled&&null!=r.popupTemplate}).then(function(){return function(){var e="this SceneLayer: "+r.title;null==r.attributeStorageInfo?D.warn("Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on "+e):D.info("Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on "+e)}}),null}))},l.prototype._fetchAssociatedFeatureLayerFromRelatedItems=function(e){var r=this;return e.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"}).then(function(e){var t=e.filter(function(e){return"Feature Service"===e.type})[0];return t?r._fetchAssociatedFeatureLayerFromPortalItem(new A({id:t.id,portal:t.portal})):u.reject()}).catch(function(){return r._fetchAssociatedFeatureLayerFromUrl()})},l.prototype._fetchAssociatedFeatureLayerFromPortalItem=function(e){var r=this;return e.load().then(function(e){return r._findMatchingAssociatedSublayerUrl(e.url)}).then(function(r){return u.resolve(new v({url:r,portalItem:e}))})},l.prototype._fetchAssociatedFeatureLayerFromUrl=function(){return this._findMatchingAssociatedSublayerUrl().then(function(e){return u.resolve(new v({url:e}))})},l.prototype._findMatchingAssociatedSublayerUrl=function(e){var r=this.parsedUrl.path.match(/^(.*)\/SceneServer\/layers\/([\d]*)\/?$/i);if(!r)return u.reject();null==e&&(e=r[1]+"/FeatureServer");var t=e.replace(/^(.*FeatureServer)(\/[\d]*\/?)?$/i,"$1"),o={query:{f:"json"},responseType:"json"},n=r[1]+"/SceneServer",i=parseInt(r[2],10),a=s(n,o).catch(function(e){return{data:{layers:null}}}),p=s(t,o);return u.all([p,a]).then(function(e){var r=e[0],o=e[1],n=o.data&&o.data.layers,a=r.data&&r.data.layers;if(!Array.isArray(a))throw new Error("expected layers array");if(Array.isArray(n))for(var s=0;s<Math.min(n.length,a.length);s++){var p=n[s];if(p.id===i)return t+"/"+a[s].id}else if(i<a.length)return t+"/"+a[i].id;throw new Error("could not find matching associated sublayer")})},l.prototype._buddyIsMoreImportant=function(e){if(!this.associatedLayer)return!1;var r=f.nameToId(this.originOf(e)),t=f.nameToId(this.associatedLayer.originOf(e));return null!=t&&t<=f.OriginId.SERVICE?null==r||r<f.OriginId.SERVICE:null!=t&&t<=f.OriginId.PORTAL_ITEM&&(null==r||r<f.OriginId.PORTAL_ITEM)},l.prototype._validateElevationInfo=function(){var e=this.elevationInfo;e&&("mesh-pyramids"===this.profile&&"absolute-height"!==e.mode&&D.warn(".elevationInfo=","Mesh scene layers only support absolute-height elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&D.warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))},n([y.shared("esri.layers.SceneLayer")],l.prototype,"declaredClass",void 0),n([y.property({types:{key:"type",base:w.default,typeMap:{selection:S.default}},json:{origins:{"web-scene":{read:{source:"layerDefinition.featureReduction"},write:{target:"layerDefinition.featureReduction"}}}}})],l.prototype,"featureReduction",void 0),n([y.property({type:[E.default],json:{read:!1,origins:{"web-scene":{read:{source:"layerDefinition.rangeInfos"},write:{target:"layerDefinition.rangeInfos"}}}}})],l.prototype,"rangeInfos",void 0),n([y.property({json:{read:!1}})],l.prototype,"associatedLayer",void 0),n([y.property({type:["show","hide"]})],l.prototype,"listMode",void 0),n([y.property({type:["ArcGISSceneServiceLayer"]})],l.prototype,"operationalLayerType",void 0),n([y.property({json:{read:!1},readOnly:!0})],l.prototype,"type",void 0),n([y.property({type:[F]})],l.prototype,"fields",void 0),n([y.property({readOnly:!0})],l.prototype,"attributeStorageInfo",void 0),n([y.property({readOnly:!0})],l.prototype,"statisticsInfo",void 0),n([y.property({type:String,json:{origins:{service:{read:!1,write:!1}},read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],l.prototype,"definitionExpression",void 0),n([y.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],l.prototype,"path",void 0),n([y.property(I.elevationInfo)],l.prototype,"elevationInfo",null),n([y.property({type:String,dependsOn:["profile"]})],l.prototype,"geometryType",null),n([y.property(I.labelsVisible)],l.prototype,"labelsVisible",void 0),n([y.property({type:[j],json:{origins:{service:{read:{source:"drawingInfo.labelingInfo",reader:_.reader},write:{target:"drawingInfo.labelingInfo",enabled:!1}}},read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:_.reader},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],l.prototype,"labelingInfo",void 0),n([y.property(I.legendEnabled)],l.prototype,"legendEnabled",void 0),n([y.property({types:a.rendererTypes,json:{origins:{service:{read:{source:"drawingInfo.renderer",reader:U}}},read:{source:"layerDefinition.drawingInfo.renderer",reader:U},write:{target:"layerDefinition.drawingInfo.renderer"}},value:null})],l.prototype,"renderer",null),n([y.property({json:{read:!1}})],l.prototype,"cachedDrawingInfo",void 0),n([y.reader("service","cachedDrawingInfo")],l.prototype,"readCachedDrawingInfo",null),n([y.property(I.popupEnabled)],l.prototype,"popupEnabled",void 0),n([y.property({type:i,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],l.prototype,"popupTemplate",void 0),n([y.property({readOnly:!0,json:{read:!1},dependsOn:["fields","title","attributeStorageInfo","associatedLayer"]})],l.prototype,"defaultPopupTemplate",null),n([y.property({type:String,json:{read:!1}})],l.prototype,"objectIdField",void 0),n([y.reader("service","objectIdField",["objectIdField","fields"])],l.prototype,"readObjectIdField",null),n([y.property({json:{read:!1}})],l.prototype,"objectIdFilter",void 0),n([y.property({type:String,json:{read:!1}})],l.prototype,"profile",void 0),n([y.reader("service","profile",["store.profile"])],l.prototype,"readProfile",null),n([y.property({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],l.prototype,"normalReferenceFrame",void 0),n([y.property(b.screenSizePerspectiveEnabled)],l.prototype,"screenSizePerspectiveEnabled",void 0),l=n([y.subclass()],l)}(y.declared(g,m)),Q={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},C={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"};return q});