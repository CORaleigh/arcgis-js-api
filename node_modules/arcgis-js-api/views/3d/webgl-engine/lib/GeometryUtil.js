// COPYRIGHT Â© 2018 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.11/esri/copyright.txt for details.

define(["require","exports","../../../../core/libs/gl-matrix-2/vec3","../../../../core/libs/gl-matrix-2/vec3f32","../../../../core/libs/gl-matrix-2/vec3f64","../../support/geometryUtils","./BufferVectorMath","./GeometryData","./Util"],function(t,e,r,a,n,o,s,c,v){var i,l=s.Vec3Compact;!function(t){function e(t){Array.isArray(t)||(t=[t,t,t]);for(var e=new Float32Array(24),r=0;r<8;r++)e[3*r]=a[r][0]*t[0],e[3*r+1]=a[r][1]*t[1],e[3*r+2]=a[r][2]*t[2];var l={};l[v.VertexAttrConstants.POSITION]=new Uint32Array(s),l[v.VertexAttrConstants.NORMAL]=new Uint32Array(i),l[v.VertexAttrConstants.UV0]=new Uint32Array(f);var A={};return A[v.VertexAttrConstants.POSITION]={size:3,data:e},A[v.VertexAttrConstants.NORMAL]={size:3,data:new Float32Array(n)},A[v.VertexAttrConstants.UV0]={size:2,data:new Float32Array(o)},new c(A,l)}for(var r=.5,a=[[-r,-r,r],[r,-r,r],[r,r,r],[-r,r,r],[-r,-r,-r],[r,-r,-r],[r,r,-r],[-r,r,-r]],n=[0,0,1,-1,0,0,1,0,0,0,-1,0,0,1,0,0,0,-1],o=[0,0,1,0,1,1,0,1],s=[0,1,2,2,3,0,4,0,3,3,7,4,1,5,6,6,2,1,1,0,4,4,5,1,3,2,6,6,7,3,5,4,7,7,6,5],i=new Array(36),l=0;l<6;l++)for(var A=0;A<6;A++)i[6*l+A]=l;for(var f=new Array(36),l=0;l<6;l++)f[6*l+0]=0,f[6*l+1]=1,f[6*l+2]=2,f[6*l+3]=2,f[6*l+4]=3,f[6*l+5]=0;t.createGeometry=e}(i||(i={}));var A;!function(t){function e(t){Array.isArray(t)||(t=[t,t,t]);for(var e=new Float32Array(18),r=0;r<6;r++)e[3*r]=a[r][0]*t[0],e[3*r+1]=a[r][1]*t[1],e[3*r+2]=a[r][2]*t[2];var i={};i[v.VertexAttrConstants.POSITION]=new Uint32Array(o),i[v.VertexAttrConstants.NORMAL]=new Uint32Array(s);var l={};return l[v.VertexAttrConstants.POSITION]={size:3,data:e},l[v.VertexAttrConstants.NORMAL]={size:3,data:new Float32Array(n)},new c(l,i)}var r=.5,a=[[-r,0,-r],[r,0,-r],[r,0,r],[-r,0,r],[0,-r,0],[0,r,0]],n=[0,1,-1,1,1,0,0,1,1,-1,1,0,0,-1,-1,1,-1,0,0,-1,1,-1,-1,0],o=[5,1,0,5,2,1,5,3,2,5,0,3,4,0,1,4,1,2,4,2,3,4,3,0],s=[0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7];t.createGeometry=e}(A||(A={}));var f;!function(t){function e(t){Array.isArray(t)||(t=[t,t,t]);for(var e=new Float32Array(12),r=0;r<4;r++)e[3*r]=O[r][0]*t[0],e[3*r+1]=O[r][1]*t[1],e[3*r+2]=O[r][2]*t[2];var a={};a[v.VertexAttrConstants.POSITION]=new Uint32Array(u),a[v.VertexAttrConstants.NORMAL]=new Uint32Array(x);var n={};return n[v.VertexAttrConstants.POSITION]={size:3,data:e},n[v.VertexAttrConstants.NORMAL]={size:3,data:new Float32Array(h)},new c(n,a)}var n=.5,o=a.vec3f32.fromValues(-n,0,-n),s=a.vec3f32.fromValues(n,0,-n),i=a.vec3f32.fromValues(0,0,n),l=a.vec3f32.fromValues(0,.5,0),A=a.vec3f32.create(),f=a.vec3f32.create(),y=a.vec3f32.create(),V=a.vec3f32.create(),d=a.vec3f32.create();r.vec3.subtract(A,o,l),r.vec3.subtract(f,o,s),r.vec3.cross(y,A,f),r.vec3.normalize(y,y),r.vec3.subtract(A,s,l),r.vec3.subtract(f,s,i),r.vec3.cross(V,A,f),r.vec3.normalize(V,V),r.vec3.subtract(A,i,l),r.vec3.subtract(f,i,o),r.vec3.cross(d,A,f),r.vec3.normalize(d,d);var O=[o,s,i,l],h=[0,-1,0,y[0],y[1],y[2],V[0],V[1],V[2],d[0],d[1],d[2]],u=[0,1,2,3,1,0,3,2,1,3,0,2],x=[0,0,0,1,1,1,2,2,2,3,3,3];t.createGeometry=e}(f||(f={}));var y;!function(t){function e(t,e,r,a,n,o,s){t=t||50,a=void 0!==a?a:-Math.PI,n=void 0!==n?n:2*Math.PI,o=void 0!==o?o:.5*-Math.PI,s=void 0!==s?s:Math.PI;for(var i=Math.max(3,Math.floor(e)||8),l=Math.max(2,Math.floor(r)||6),A=(i+1)*(l+1),f=new Float32Array(3*A),y=new Float32Array(3*A),V=new Float32Array(2*A),d=[],O=0,h=0;h<=l;h++){for(var u=[],x=h/l,C=o+x*s,w=Math.cos(C),m=0;m<=i;m++){var I=m/i,g=a+I*n,M=Math.cos(g)*w,z=Math.sin(C),N=-Math.sin(g)*w;f[3*O]=M*t,f[3*O+1]=z*t,f[3*O+2]=N*t,y[3*O]=M,y[3*O+1]=z,y[3*O+2]=N,V[2*O]=I,V[2*O+1]=x,u.push(O),++O}d.push(u)}var U=new Uint32Array(2*i*(l-1)*3);O=0;for(var h=0;h<l;h++)for(var m=0;m<i;m++){var P=d[h][m],F=d[h][m+1],S=d[h+1][m+1],p=d[h+1][m];0===h?(U[O++]=P,U[O++]=S,U[O++]=p):h===l-1?(U[O++]=P,U[O++]=F,U[O++]=S):(U[O++]=P,U[O++]=F,U[O++]=S,U[O++]=S,U[O++]=p,U[O++]=P)}v.assert(O===U.length);var T={};T[v.VertexAttrConstants.POSITION]=U,T[v.VertexAttrConstants.NORMAL]=U,T[v.VertexAttrConstants.UV0]=U;var R={};return R[v.VertexAttrConstants.POSITION]={size:3,data:f},R[v.VertexAttrConstants.NORMAL]={size:3,data:y},R[v.VertexAttrConstants.UV0]={size:2,data:V},new c(R,T)}function y(t,e,r){function a(e,r){var a;e>r&&(a=[r,e],e=a[0],r=a[1]);var o=e.toString()+"."+r.toString();if(f[o])return f[o];var s=n.length;return n.length+=3,l.add(n,3*e,n,3*r,n,s),l.scale(n,s,t/l.length(n,s)),s/=3,f[o]=s,s}var n,o,s=t;if(r)n=[0,-1,0,1,0,0,0,0,1,-1,0,0,0,0,-1,0,1,0],o=new Uint32Array([0,1,2,0,2,3,0,3,4,0,4,1,1,5,2,2,5,3,3,5,4,4,5,1]);else{var i=s*(1+Math.sqrt(5))/2;n=[-s,i,0,s,i,0,-s,-i,0,s,-i,0,0,-s,i,0,s,i,0,-s,-i,0,s,-i,i,0,-s,i,0,s,-i,0,-s,-i,0,s],o=new Uint32Array([0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1])}for(var A=0;A<n.length;A+=3)l.scale(n,A,t/l.length(n,A));for(var f={},A=0;A<e;A++){for(var y=o.length,V=new Uint32Array(4*y),d=0;d<y;d+=3){var O=o[d],h=o[d+1],u=o[d+2],x=a(O,h),C=a(h,u),w=a(u,O),m=4*d;V[m]=O,V[m+1]=x,V[m+2]=w,V[m+3]=h,V[m+4]=C,V[m+5]=x,V[m+6]=u,V[m+7]=w,V[m+8]=C,V[m+9]=x,V[m+10]=C,V[m+11]=w}o=V,f={}}for(var I=new Float32Array(n),A=0;A<I.length;A+=3)l.normalize(I,A);var g={};g[v.VertexAttrConstants.POSITION]=o,g[v.VertexAttrConstants.NORMAL]=o;var M={};return M[v.VertexAttrConstants.POSITION]={size:3,data:new Float32Array(n)},M[v.VertexAttrConstants.NORMAL]={size:3,data:I},new c(M,g)}function h(t,e,r,a,n,o,s){var i=e?new Float64Array([e[0],e[1],e[2]]):new Float32Array([0,0,0]),l=t?new Float32Array([t[0],t[1],t[2]]):new Float32Array([0,0,1]),A=o?new Float32Array(o):new Float32Array([0,0]),f=r?new Uint8Array([255*r[0],255*r[1],255*r[2],r.length>3?255*r[3]:255]):new Uint8Array([255,255,255,255]),y=null!=a&&2===a.length?new Float32Array(a):new Float32Array([1,1]),V=new Uint32Array([0]),d={};d[v.VertexAttrConstants.POSITION]=V,d[v.VertexAttrConstants.NORMAL]=V,d[v.VertexAttrConstants.UV0]=V,d[v.VertexAttrConstants.COLOR]=V,d[v.VertexAttrConstants.SIZE]=V;var O={};if(O[v.VertexAttrConstants.POSITION]={size:3,data:i},O[v.VertexAttrConstants.NORMAL]={size:3,data:l},O[v.VertexAttrConstants.UV0]={size:A.length,data:A},O[v.VertexAttrConstants.COLOR]={size:4,data:f},O[v.VertexAttrConstants.SIZE]={size:2,data:y},null!=n){var h=new Float32Array([n[0],n[1],n[2],n[3]]);d[v.VertexAttrConstants.AUXPOS1]=V,O[v.VertexAttrConstants.AUXPOS1]={size:4,data:h}}if(null!=s){var u=new Float32Array([s[0],s[1],s[2],s[3]]);d[v.VertexAttrConstants.AUXPOS2]=V,O[v.VertexAttrConstants.AUXPOS2]={size:4,data:u}}return new c(O,d,c.DefaultOffsets,"point")}function u(t,e){for(var r=new Float32Array(3*t.length),a=new Float32Array(e?3*t.length:3),n=new Uint32Array(t.length),o=new Uint32Array(t.length),s=0;s<t.length;s++)r[3*s]=t[s][0],r[3*s+1]=t[s][1],r[3*s+2]=t[s][2],e&&(a[3*s]=e[s][0],a[3*s+1]=e[s][1],a[3*s+2]=e[s][2]),n[s]=s,o[s]=0;e||(a[0]=0,a[1]=1,a[2]=0);var i=new Float32Array(2);i[0]=0,i[1]=0;var l={};l[v.VertexAttrConstants.POSITION]=n,l[v.VertexAttrConstants.NORMAL]=e?n:o,l[v.VertexAttrConstants.UV0]=o;var A={};return A[v.VertexAttrConstants.POSITION]={size:3,data:r},A[v.VertexAttrConstants.NORMAL]={size:3,data:a},A[v.VertexAttrConstants.UV0]={size:2,data:i},new c(A,l,c.DefaultOffsets,"point")}function x(){var t=new Float32Array([0,0,0,0,0,100,100,0,0]),e=new Uint32Array([0,1,2]),r=new Float32Array([0,1,0]),a=new Uint32Array([0,0,0]),n=new Float32Array([0,0]),o=new Uint32Array([0,0,0]),s={};s[v.VertexAttrConstants.POSITION]=e,s[v.VertexAttrConstants.NORMAL]=a,s[v.VertexAttrConstants.UV0]=o;var i={};return i[v.VertexAttrConstants.POSITION]={size:3,data:t},i[v.VertexAttrConstants.NORMAL]={size:3,data:r},i[v.VertexAttrConstants.UV0]={size:2,data:n},new c(i,s)}function C(t){var e=new Float32Array(12);if(t)for(var r=0;r<4;r++)for(var a=0;a<3;a++)e[3*r+a]=t[r][a];else e[0]=-1,e[1]=-1,e[2]=0,e[3]=1,e[4]=-1,e[5]=0,e[6]=1,e[7]=1,e[8]=0,e[9]=-1,e[10]=1,e[11]=0;var n=new Uint32Array([0,1,2,2,3,0]),o=new Float32Array([0,0,1]),s=new Uint32Array([0,0,0,0,0,0]),i=new Float32Array([0,0,1,0,1,1,0,1]),l=new Uint8Array([255,255,255,255]),A={};A[v.VertexAttrConstants.POSITION]=n,A[v.VertexAttrConstants.NORMAL]=s,A[v.VertexAttrConstants.UV0]=n,A[v.VertexAttrConstants.COLOR]=s;var f={};return f[v.VertexAttrConstants.POSITION]={size:3,data:e},f[v.VertexAttrConstants.NORMAL]={size:3,data:o},f[v.VertexAttrConstants.UV0]={size:2,data:i},f[v.VertexAttrConstants.COLOR]={size:4,data:l},new c(f,A)}function w(t,e,r,n,o,s){void 0===o&&(o=!0),void 0===s&&(s=!0);var i=0,l=e,A=t,f=a.vec3f32.fromValues(0,i,0),y=a.vec3f32.fromValues(0,i+A,0),V=a.vec3f32.fromValues(0,-1,0),d=a.vec3f32.fromValues(0,1,0);n&&(i=A,y=a.vec3f32.fromValues(0,0,0),f=a.vec3f32.fromValues(0,i,0),V=a.vec3f32.fromValues(0,1,0),d=a.vec3f32.fromValues(0,-1,0));var O=[y,f],h=[V,d],u=r+2,x=Math.sqrt(A*A+l*l);if(n)for(var C=r-1;C>=0;C--){var w=C*(2*Math.PI/r),m=a.vec3f32.fromValues(Math.cos(w)*l,i,Math.sin(w)*l);O.push(m);var I=a.vec3f32.fromValues(A*Math.cos(w)/x,-l/x,A*Math.sin(w)/x);h.push(I)}else for(var C=0;C<r;C++){var w=C*(2*Math.PI/r),m=a.vec3f32.fromValues(Math.cos(w)*l,i,Math.sin(w)*l);O.push(m);var I=a.vec3f32.fromValues(A*Math.cos(w)/x,l/x,A*Math.sin(w)/x);h.push(I)}var g=new Uint32Array(2*(r+2)*3),M=new Uint32Array(2*(r+2)*3),z=0,N=0;if(o){for(var C=3;C<O.length;C++)g[z++]=1,g[z++]=C-1,g[z++]=C,M[N++]=0,M[N++]=0,M[N++]=0;g[z++]=O.length-1,g[z++]=2,g[z++]=1,M[N++]=0,M[N++]=0,M[N++]=0}if(s){for(var C=3;C<O.length;C++)g[z++]=C,g[z++]=C-1,g[z++]=0,M[N++]=C,M[N++]=C-1,M[N++]=1;g[z++]=0,g[z++]=2,g[z++]=O.length-1,M[N++]=1,M[N++]=2,M[N++]=h.length-1}for(var U=new Float32Array(3*u),C=0;C<u;C++)U[3*C]=O[C][0],U[3*C+1]=O[C][1],U[3*C+2]=O[C][2];for(var P=new Float32Array(3*u),C=0;C<u;C++)P[3*C]=h[C][0],P[3*C+1]=h[C][1],P[3*C+2]=h[C][2];var F={};F[v.VertexAttrConstants.POSITION]=g,F[v.VertexAttrConstants.NORMAL]=M;var S={};return S[v.VertexAttrConstants.POSITION]={size:3,data:U},S[v.VertexAttrConstants.NORMAL]={size:3,data:P},new c(S,F)}function m(t,e,n,o,s,i){var l=o?a.vec3f32.clone(o):a.vec3f32.fromValues(1,0,0),A=s?a.vec3f32.clone(s):a.vec3f32.fromValues(0,0,0),f=void 0===i||i,y=a.vec3f32.create();r.vec3.normalize(y,l);var V=a.vec3f32.create();r.vec3.scale(V,y,Math.abs(t));var d=a.vec3f32.create();r.vec3.scale(d,V,-.5),r.vec3.add(d,d,A);var O=a.vec3f32.fromValues(0,1,0);Math.abs(1-r.vec3.dot(y,O))<.2&&r.vec3.set(O,0,0,1);var h=a.vec3f32.create();r.vec3.cross(h,y,O),r.vec3.normalize(h,h),r.vec3.cross(O,h,y);var u=2*n+(f?2:0),x=n+(f?2:0),C=new Float32Array(3*u),w=new Float32Array(3*x),m=new Float32Array(2*u),I=new Uint32Array(3*n*(f?4:2)),g=new Uint32Array(3*n*(f?4:2));f&&(C[3*(u-2)+0]=d[0],C[3*(u-2)+1]=d[1],C[3*(u-2)+2]=d[2],m[2*(u-2)]=0,m[2*(u-2)+1]=0,C[3*(u-1)+0]=C[3*(u-2)+0]+V[0],C[3*(u-1)+1]=C[3*(u-2)+1]+V[1],C[3*(u-1)+2]=C[3*(u-2)+2]+V[2],m[2*(u-1)]=1,m[2*(u-1)+1]=1,w[3*(x-2)+0]=-y[0],w[3*(x-2)+1]=-y[1],w[3*(x-2)+2]=-y[2],w[3*(x-1)+0]=y[0],w[3*(x-1)+1]=y[1],w[3*(x-1)+2]=y[2]);for(var M=function(t,e,r){I[t]=e,g[t]=r},z=0,N=a.vec3f32.create(),U=a.vec3f32.create(),P=0;P<n;P++){var F=P*(2*Math.PI/n);r.vec3.scale(N,O,Math.sin(F)),r.vec3.scale(U,h,Math.cos(F)),r.vec3.add(N,N,U),w[3*P+0]=N[0],w[3*P+1]=N[1],w[3*P+2]=N[2],r.vec3.scale(N,N,e),r.vec3.add(N,N,d),C[3*P+0]=N[0],C[3*P+1]=N[1],C[3*P+2]=N[2],m[2*P+0]=P/n,m[2*P+1]=0,C[3*(P+n)+0]=C[3*P+0]+V[0],C[3*(P+n)+1]=C[3*P+1]+V[1],C[3*(P+n)+2]=C[3*P+2]+V[2],m[2*(P+n)+0]=P/n,m[2*P+1]=1;var S=(P+1)%n;M(z++,P,P),M(z++,P+n,P),M(z++,S,S),M(z++,S,S),M(z++,P+n,P),M(z++,S+n,S)}if(f){for(var P=0;P<n;P++){var S=(P+1)%n;M(z++,u-2,x-2),M(z++,P,x-2),M(z++,S,x-2)}for(var P=0;P<n;P++){var S=(P+1)%n;M(z++,P+n,x-1),M(z++,u-1,x-1),M(z++,S+n,x-1)}}var p={};p[v.VertexAttrConstants.POSITION]=I,p[v.VertexAttrConstants.NORMAL]=g,p[v.VertexAttrConstants.UV0]=I;var T={};return T[v.VertexAttrConstants.POSITION]={size:3,data:C},T[v.VertexAttrConstants.NORMAL]={size:3,data:w},T[v.VertexAttrConstants.UV0]={size:2,data:m},new c(T,p)}function I(e,r,a,n,o){a=a||10,n=null==n||n,v.assert(e.length>1);for(var s=[[0,0,0]],c=[],i=[],l=0;l<a;l++){c.push([0,-l-1,-(l+1)%a-1]);var A=l/a*2*Math.PI;i.push([Math.cos(A)*r,Math.sin(A)*r])}return t.createPathExtrusionGeometry(i,e,s,c,n,o)}function g(t,e,s,i,l,A){void 0===A&&(A=a.vec3f32.fromValues(0,0,0));var f=t.length,y=new Float32Array(e.length*f*3+(6*s.length||0)),d=new Float32Array(e.length*f+(2*s.length||0)),O=new Float32Array(e.length*f*3+(s?6:0)),h=(e.length-1)*f*6+3*i.length*2,u=new Uint32Array(h),x=new Uint32Array(h),C=0,w=0,m=0,I=0,g=0,M=a.vec3f32.create(),z=a.vec3f32.create(),N=a.vec3f32.create(),U=a.vec3f32.create(),P=a.vec3f32.create(),F=a.vec3f32.create(),S=a.vec3f32.create(),T=n.vec3f64.create(),R=a.vec3f32.create(),L=a.vec3f32.create(),G=a.vec3f32.create(),b=a.vec3f32.create(),D=a.vec3f32.create(),E=o.plane.create();r.vec3.set(R,0,1,0),r.vec3.subtract(z,e[1],e[0]),r.vec3.normalize(z,z),l?(r.vec3.add(T,e[0],A),r.vec3.normalize(N,T)):r.vec3.set(N,0,0,1),p(z,N,R,R,P,N,V),r.vec3.copy(U,N),r.vec3.copy(b,P);for(var q=0;q<s.length;q++)r.vec3.scale(F,P,s[q][0]),r.vec3.scale(T,N,s[q][2]),r.vec3.add(F,F,T),r.vec3.add(F,F,e[0]),y[C++]=F[0],y[C++]=F[1],y[C++]=F[2],d[m++]=0;O[w++]=-z[0],O[w++]=-z[1],O[w++]=-z[2];for(var q=0;q<i.length;q++)u[I++]=i[q][0]>0?i[q][0]:-i[q][0]-1+s.length,u[I++]=i[q][1]>0?i[q][1]:-i[q][1]-1+s.length,u[I++]=i[q][2]>0?i[q][2]:-i[q][2]-1+s.length,x[g++]=0,x[g++]=0,x[g++]=0;for(var B=s.length,X=s.length-1,k=0;k<e.length;k++){var Z=!1;if(k>0){r.vec3.copy(M,z),k<e.length-1?(r.vec3.subtract(z,e[k+1],e[k]),r.vec3.normalize(z,z)):Z=!0,r.vec3.add(L,M,z),r.vec3.normalize(L,L),r.vec3.add(G,e[k-1],U),o.plane.fromPositionAndNormal(e[k],L,E);o.plane.intersectRay(E,o.ray.wrap(G,M),T)?(r.vec3.subtract(T,T,e[k]),r.vec3.normalize(N,T),r.vec3.cross(P,L,N),r.vec3.normalize(P,P)):p(L,U,b,R,P,N,V),r.vec3.copy(U,N),r.vec3.copy(b,P)}l&&(r.vec3.add(T,e[k],A),r.vec3.normalize(D,T));for(var j=0;j<f;j++)if(r.vec3.scale(F,P,t[j][0]),r.vec3.scale(T,N,t[j][1]),r.vec3.add(F,F,T),r.vec3.normalize(S,F),O[w++]=S[0],O[w++]=S[1],O[w++]=S[2],d[m++]=l?r.vec3.dot(F,D):F[2],r.vec3.add(F,F,e[k]),y[C++]=F[0],y[C++]=F[1],y[C++]=F[2],!Z){var H=(j+1)%f;u[I++]=B+j,u[I++]=B+f+j,u[I++]=B+H,u[I++]=B+H,u[I++]=B+f+j,u[I++]=B+f+H;for(var J=0;J<6;J++)x[g++]=u[I-6+J]-X}B+=f}for(var K=e[e.length-1],q=0;q<s.length;q++)r.vec3.scale(F,P,s[q][0]),r.vec3.scale(T,N,s[q][1]),r.vec3.add(F,F,T),r.vec3.add(F,F,K),y[C++]=F[0],y[C++]=F[1],y[C++]=F[2],d[m++]=0;var Q=w/3;O[w++]=z[0],O[w++]=z[1],O[w++]=z[2];for(var W=B-f,q=0;q<i.length;q++)u[I++]=i[q][0]>=0?B+i[q][0]:-i[q][0]-1+W,u[I++]=i[q][2]>=0?B+i[q][2]:-i[q][2]-1+W,u[I++]=i[q][1]>=0?B+i[q][1]:-i[q][1]-1+W,x[g++]=Q,x[g++]=Q,x[g++]=Q;var Y={};Y[v.VertexAttrConstants.POSITION]=u,Y[v.VertexAttrConstants.NORMAL]=x;var $={};return $[v.VertexAttrConstants.POSITION]={size:3,data:y},$.zOffset={size:1,data:d},$[v.VertexAttrConstants.NORMAL]={size:3,data:O},new c($,Y)}function M(t,e){v.assert(t.length>1,"createPolylineGeometry(): polyline needs at least 2 points"),v.assert(3===t[0].length,"createPolylineGeometry(): malformed vertex"),v.assert(void 0===e||e.length===t.length,"createPolylineGeometry: need same number of points and normals"),v.assert(void 0===e||3===e[0].length,"createPolylineGeometry(): malformed normal");for(var r=new Float32Array(3*t.length),a=new Uint32Array(2*(t.length-1)),n=0,o=0,s=0;s<t.length;s++){for(var i=0;i<3;i++)r[n++]=t[s][i];s>0&&(a[o++]=s-1,a[o++]=s)}var l={},A={};if(l[v.VertexAttrConstants.POSITION]=a,A[v.VertexAttrConstants.POSITION]={size:3,data:r},e){for(var f=new Float32Array(3*e.length),y=0,s=0;s<t.length;s++)for(var i=0;i<3;i++)f[y++]=e[s][i];l[v.VertexAttrConstants.NORMAL]=a,A[v.VertexAttrConstants.NORMAL]={size:3,data:f}}return new c(A,l,c.DefaultOffsets,"line")}function z(t,e,r,a){for(var n,o,s=new Float32Array(18),i=[[-e,0,a/2],[r,0,a/2],[0,t,a/2],[-e,0,-a/2],[r,0,-a/2],[0,t,-a/2]],l=[0,1,2,3,0,2,2,5,3,1,4,5,5,2,1,1,0,3,3,4,1,4,3,5],A=0;A<6;A++)s[3*A]=i[A][0],s[3*A+1]=i[A][1],s[3*A+2]=i[A][2];var f=(n={},n[v.VertexAttrConstants.POSITION]=new Uint32Array(l),n),y=(o={},o[v.VertexAttrConstants.POSITION]={size:3,data:s},o);return new c(y,f)}function N(t,e){for(var a=t.vertexAttributes[v.VertexAttrConstants.POSITION].data,n=0;n<a.length;n+=3){var o=a[n],s=a[n+1],c=a[n+2];r.vec3.set(d,o,s,c),r.vec3.transformMat4(d,d,e),a[n]=d[0],a[n+1]=d[1],a[n+2]=d[2]}}function U(t,e){var r=e||[1,1,1,1],a=new Uint8Array(4);a[0]=255*r[0],a[1]=255*r[1],a[2]=255*r[2],a[3]=255*(r.length>3?r[3]:1);var n={},o=t.getVertexAttr();for(var s in o)n[s]=o[s];n[v.VertexAttrConstants.COLOR]={size:4,data:a};var i={};for(var s in t.indices)i[s]=t.indices[s];var l=i[v.VertexAttrConstants.POSITION].length;return i[v.VertexAttrConstants.COLOR]=new Uint32Array(l),t=new c(n,i,t.componentOffsets,t.primitiveType)}function P(t){for(var e=t.getVertexAttr(),a=t.indices,n=s.Vec3Compact.subtract,o=a.position.length/3,c=new Float32Array(3*o),i=e.position.data,l=0,A=a.position,f=new Uint32Array(A.length),y=0;y<A.length;y+=3){n(i,3*A[y],i,3*A[y+2],O,0),n(i,3*A[y],i,3*A[y+1],d,0),r.vec3.cross(d,d,O),r.vec3.normalize(d,d);var V=l/3;c[l++]=d[0],c[l++]=d[1],c[l++]=d[2],f[y]=V,f[y+1]=V,f[y+2]=V}e[v.VertexAttrConstants.NORMAL]={size:3,data:c,offsetIdx:0,strideIdx:3},a[v.VertexAttrConstants.NORMAL]=f}function F(t,e){void 0===e&&(e=t);var r=t.getVertexAttr(),a=r.position.data,n=r.normal.data,o=e.getVertexAttr(),s=o.position.data,c=o.normal.data;if(n)for(var v=0;v<n.length;v+=3){var i=n[v+1];c[v+1]=-n[v+2],c[v+2]=i}if(a)for(var v=0;v<a.length;v+=3){var i=a[v+1];s[v+1]=-a[v+2],s[v+2]=i}return e}function S(t,e,a,n,o){return!(Math.abs(r.vec3.dot(e,t))>o)&&(r.vec3.cross(a,t,e),r.vec3.normalize(a,a),r.vec3.cross(n,a,t),r.vec3.normalize(n,n),!0)}function p(t,e,r,a,n,o,s){return S(t,e,n,o,s)||S(t,r,n,o,s)||S(t,a,n,o,s)}t.createBoxGeometry=i.createGeometry,t.createDiamondGeometry=A.createGeometry,t.createTetrahedronGeometry=f.createGeometry,t.createSphereGeometry=e,t.createPolySphereGeometry=y,t.createPointGeometry=h,t.createPointArrayGeometry=u,t.createTriangleGeometry=x,t.createSquareGeometry=C,t.createConeGeometry=w,t.createCylinderGeometry=m,t.createTubeGeometry=I,t.createPathExtrusionGeometry=g,t.createPolylineGeometry=M,t.createExtrudedTriangle=z,t.transformInPlace=N,t.addVertexColors=U,t.addNormals=P,t.cgToGIS=F,t.makeOrthoBasisDirUp=S,t.makeOrthoBasisDirUpFallback=p}(y||(y={}));var V=.99619469809,d=a.vec3f32.create(),O=a.vec3f32.create();return y});