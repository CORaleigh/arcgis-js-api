// COPYRIGHT Â© 2018 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.11/esri/copyright.txt for details.

define(["require","exports","../../../../../../core/tsSupport/extendsHelper","../../../../../../core/Logger","../../../../../../core/screenUtils","../../color","../../definitions","../../enums","../../LineTess","../../number","../../TileClipper","../../Utils","../../WGLDisplayRecord","../../materialKey/MaterialKey","./WGLMeshTemplate"],function(e,t,i,r,T,m,o,x,O,I,n,_,w,C,s){Object.defineProperty(t,"__esModule",{value:!0});var V=r.getLogger("esri.views.2d.engine.webgl.WGLLineTemplate"),U=65535,K=O.allocTriangles(20),a=O.allocTriangles(20),j=[O.allocExtrudeVectors(),O.allocExtrudeVectors()],N=O.allocExtrudeVectors(),v=o.TILE_SIZE+8,S=31,W=new O.Tessellator({distanceAlongCorrection:!0}),b=new n.TileClipper(0,0,0,1,8);b.setExtent(o.TILE_SIZE);var l=function(y){function g(e,t,i,r,o,n,s,a,l,p,u,h){var c=y.call(this)||this;c.width=i,c.capType=r,c.joinType=o,c.fillColor=n,c.tl=s,c.br=a,c.hasPattern=l,c.isDashed=p,c.isColorLocked=u,c.isOutline=h,c.geometryType=x.WGLGeometryType.LINE;var d=C.LineMaterialKey.load(C.createMaterialKey(c.geometryType,e,h));return t&&(d.sdf=t.sdf,d.pattern=!0,d.textureBinding=t.textureBinding),c._materialKey=d.data,c._bitset=u?1:0,c}return i(g,y),g.fromCIMLine=function(e,t,i,r){var o=t.color,n=t.isDashed,s=t.cap;n&&s===x.CapType.ROUND&&(s=x.CapType.SQUARE);var a=t.join,l=T.pt2px(t.width),p=o&&m.premultiplyAlphaRGBA(o)||0;if(!i)return new g(e,i,l,s,a,p,0,0,!1,n,t.colorLocked,r);var u=i.rect,h=i.width,c=i.height,d=u.x+1,y=u.y+1,f=u.x+1+h,v=u.y+1+c;return new g(e,i,l,s,a,p,I.i1616to32(d,y),I.i1616to32(f,v),!0,n,t.colorLocked,r)},g.fromSimpleLine=function(e,t,i,r){var o=i.color,n="solid"!==i.style&&"none"!==i.style,s=_.getCapType(i.cap||"round",n),a=_.getJoinType(i.join||"round"),l=o&&"none"!==i.style&&m.premultiplyAlphaRGBA(o)||0;if("none"===i.style&&(l=0),!r)return new g(e,r,T.pt2px(i.width),s,a,l,0,0,!1,n,!1,t);var p=r.rect,u=r.width,h=r.height,c=p.x+1,d=p.y+1,y=p.x+1+u,f=p.y+1+h,v=I.i1616to32(c,d),x=I.i1616to32(y,f);return new g(e,r,T.pt2px(i.width),s,a,l,v,x,!0,n,!1,t)},g.fromPictureLineSymbol=function(e,t,i,r){return V.error("PictureLineSymbol support does not exist!"),null},g.prototype.writeMesh=function(e,t,i,r,o,n,s,a){var l=1/n;this.halfWidth=0<this.width?.5*(this.width+l):0;var p=t.indexVector,u=t.get("geometry"),h=t.get("visibility"),c=this.halfWidth,d=new w(r,this.geometryType,this._materialKey),y=C.LineMaterialKey.load(this._materialKey),f=t.getVector("geometry").vertexCount;switch(d.vertexFrom=f,d.indexFrom=p.length,i){case"esriGeometryPolyline":var v=o.geometry.paths;if(0===(x=this._clipLines(v)).length)return;return this._write(d,p,u,h,f,r,c,x,y,s,a),void e.push(d);case"esriGeometryPolygon":var x,g=o.geometry.rings;if(0===(x=this._clipLines(g)).length)return;return this._write(d,p,u,h,f,r,c,x,y,s,a),void e.push(d);default:V.error("Unable to handle geometryType: "+i)}},g.prototype._clipLines=function(e){for(var t=[],i=!1,r=0;r<e.length;){var o=[],n=e[r];b.reset(2);var s=n[0],a=s[0],l=s[1];if(i)b.moveTo(a,l);else{if(a<-8||v<a||l<-8||v<l){i=!0;continue}o.push({x:a,y:l})}for(var p=!1,u=n.length,h=1;h<u;++h)if(a+=n[h][0],l+=n[h][1],i)b.lineTo(a,l);else{if(a<-8||v<a||l<-8||v<l){p=!0;break}o.push({x:a,y:l})}if(p)i=!0;else{if(i){var c=b.resultWithStarts();if(c)for(var d=0,y=c;d<y.length;d++){var f=y[d];t.push(f)}}else t.push({line:o,start:0});r++,i=!1}}return t},g.prototype._write=function(e,t,i,r,o,n,s,a,l,p,u){for(var h=0,c=0,d=a;c<d.length;c++){var y=d[c],f=y.line,v=y.start;if(!(f.length<2))for(var x=f[0],g=f[f.length-1],T=g.x-x.x,m=g.y-x.y,_=T*T+m*m<1e-6,w=v%U,C=j[1],V=0;V<f.length;V++){var b=f[V],E=C===j[V%2]?j[(V+1)%2]:j[V%2],L=0===V,M=V===f.length-1;if(M&&_&&!this.hasPattern?O.copyExtrudeVectors(E,N):(this._computeExtrudeVectors(E,V,f,_),h+=this._writeVertices(i,r,n,s,b.x,b.y,E,w,h,l,p,u),null==E.capCenter||_&&M||this._writePieIndices(e,t,o,E),_&&L&&!this.hasPattern&&O.copyExtrudeVectors(N,E)),L||this._writeBridgeIndices(e,t,o,C,E),!M){var I=f[V+1],S=[I.x-b.x,I.y-b.y],P=O.length(S),R=[S[0]/P,S[1]/P],J=w+P;if(U<J){var A=(U-w)/(J-w),B=b.x+(I.x-b.x)*A,D=b.y+(I.y-b.y)*A,G=C;W.buttCap(G,R,R),h+=this._writeVertices(i,r,n,s,B,D,G,U,h,l,p,u),W.bridge(K,E,G),this._writeBridgeIndices(e,t,o,E,G),W.buttCap(G,R,R),w=J-U}else w=J,C=E}}}e.vertexCount=h},g.prototype._writeVertices=function(e,t,i,r,o,n,s,a,l,p,u,h){for(var c=0,d=I.i1616to32(o,n),y=s.vectors,f=y.items,v=y.count;c<v;++c){var x=f[c].vector,g=x[0],T=x[1],m=f[c].texCoords,_=m[0],w=m[1],C=f[c].direction,V=C[0],b=C[1],E=I.i1616to32(a,S*r),L=I.i8888to32(Math.round(S*g),Math.round(S*T),Math.round(S*_),Math.round(S*w)),M=I.i8888to32(Math.round(S*V),Math.round(S*b),0,this._bitset);e.push(d),e.push(i),e.push(this.fillColor),e.push(L),e.push(E),e.push(this.tl),e.push(this.br),e.push(M),this._writeVV(e,u,p),t.push(h),f[c].base={index:l+c,point:[o,n]}}return c},g.prototype._writeVV=function(e,t,i){i.hasVV()&&(e.push(t[x.VVType.SIZE]),e.push(t[x.VVType.COLOR]),e.push(t[x.VVType.OPACITY]))},g.prototype._writeBridgeIndices=function(e,t,i,r,o){W.bridge(K,r,o);for(var n=0;n<K.count;++n){var s=K.items[n];t.push(i+s.v1.base.index),t.push(i+s.v2.base.index),t.push(i+s.v3.base.index),e.indexCount+=3}},g.prototype._writePieIndices=function(e,t,i,r){W.pie(a,r);for(var o=0;o<a.count;++o){var n=a.items[o];t.push(i+n.v1.base.index),t.push(i+n.v2.base.index),t.push(i+n.v3.base.index),e.indexCount+=3}},g.prototype._computeExtrudeVectors=function(e,t,i,r){var o=i[t],n=[void 0,void 0],s=[void 0,void 0];if(0<t&&t<i.length-1){var a=i[(t+i.length-1)%i.length],l=i[(t+1)%i.length];O.normalize(n,[o.x-a.x,o.y-a.y]),O.normalize(s,[l.x-o.x,l.y-o.y])}else if(0===t){l=i[(t+1)%i.length];if(O.normalize(s,[l.x-o.x,l.y-o.y]),r){var p=i[i.length-2];O.normalize(n,[o.x-p.x,o.y-p.y])}else n=s}else{if(t!==i.length-1)return void console.error("Vertex index 'i' out of range.");a=i[(t+i.length-1)%i.length];if(O.normalize(n,[o.x-a.x,o.y-a.y]),r){var u=i[1];O.normalize(s,[u.x-o.x,u.y-o.y])}else s=n}r||0!==t?r||t!==i.length-1?this._computeJoinExtrudeVectors(e,n,s):this._computeCapExtrudeVectors(e,n,s,O.CapPosition.END):this._computeCapExtrudeVectors(e,n,s,O.CapPosition.START)},g.prototype._computeCapExtrudeVectors=function(e,t,i,r){switch(this.capType){case x.CapType.BUTT:return void W.buttCap(e,t,i);case x.CapType.ROUND:var o=O.getNumberOfSlices(Math.PI),n=r===O.CapPosition.START?-1:1;return void W.roundCap(e,t,i,r,o,n);case x.CapType.SQUARE:return void(this.isDashed?W.squareCapForDashedLines(e,t,i,r):W.squareCap(e,t,i,r));default:return V.error("Encountered unknown cap type: "+this.capType+", defaulting to BUTT"),void W.buttCap(e,t,i)}},g.prototype._computeJoinExtrudeVectors=function(e,t,i){var r=O.getRads(t,i);if(r>Math.PI-.05)W.rectJoin(e,t,i);else if(this.joinType===x.JoinType.MITER||r<.1)r<.05?W.fastMiterJoin(e,t,i):r<O.MITER_SAFE_RADS?W.miterJoin(e,t,i):W.bevelJoin(e,t,i,O.SYSTEM_MAG_LIMIT);else if(this.joinType===x.JoinType.BEVEL)W.bevelJoin(e,t,i,1);else if(this.joinType===x.JoinType.ROUND){var o=O.getNumberOfSlices(r);r<2.3?o<2||r<.5?W.bevelJoin(e,t,i,1):W.roundJoin(e,t,i,o):W.unitRoundJoin(e,t,i,o)}},g}(s.default);t.default=l});