{"version":3,"file":"StoreProvider.js","sourceRoot":"","sources":["StoreProvider.ts"],"names":[],"mappings":"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","sourcesContent":["import WidgetBase from '../widget-core/WidgetBase';\nimport { DNode } from '../widget-core/interfaces';\nimport { Store, StatePaths, Path } from './Store';\nimport { diffProperty } from '../widget-core/decorators/diffProperty';\nimport { Handle } from '../core/Destroyable';\nimport { shallow } from '../widget-core/diff';\nimport { alwaysRender } from '../widget-core/decorators/alwaysRender';\n\nexport interface GetPaths<S = any> {\n\t(path: StatePaths<S>): Path<S, any>[];\n}\n\nexport interface StoreProviderProperties<S = any> {\n\trenderer: (store: Store<S>) => DNode | DNode[];\n\tstateKey: string;\n\tpaths?: GetPaths<S>;\n}\n\nfunction mockPath(...paths: string[]): string {\n\treturn paths.join(',');\n}\n\nfunction pathDiff(previousProperty: Function, newProperty: Function) {\n\tconst previousPaths = previousProperty ? previousProperty(mockPath) : [];\n\tconst currentPaths = newProperty ? newProperty(mockPath) : [];\n\tconst result = shallow(previousPaths, currentPaths);\n\treturn {\n\t\tchanged: result.changed,\n\t\tvalue: newProperty\n\t};\n}\n\n@alwaysRender()\nexport class StoreProvider<S = any> extends WidgetBase<StoreProviderProperties<S>, never> {\n\tprivate _handle: Handle | undefined;\n\n\tprivate _getStore(key: string): Store<S> | undefined {\n\t\tconst item = this.registry.getInjector<Store<S>>(key);\n\t\tif (item) {\n\t\t\treturn item.injector();\n\t\t}\n\t}\n\n\t@diffProperty('stateKey')\n\t@diffProperty('paths', pathDiff)\n\tprotected onChange(previousProperties: StoreProviderProperties, currentProperties: StoreProviderProperties) {\n\t\tconst { stateKey, paths } = currentProperties;\n\t\tif (this._handle) {\n\t\t\tthis._handle.destroy();\n\t\t\tthis._handle = undefined;\n\t\t}\n\t\tconst store = this._getStore(stateKey);\n\t\tif (store) {\n\t\t\tif (paths) {\n\t\t\t\tconst handle = store.onChange(paths(store.path), () => this.invalidate());\n\t\t\t\tthis._handle = {\n\t\t\t\t\tdestroy: () => {\n\t\t\t\t\t\thandle.remove();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tthis._handle = store.on('invalidate', () => {\n\t\t\t\t\tthis.invalidate();\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.own(this._handle);\n\t\t}\n\t}\n\n\tprotected render(): DNode | DNode[] {\n\t\tconst { stateKey, renderer } = this.properties;\n\t\tconst store = this._getStore(stateKey);\n\t\tif (store) {\n\t\t\treturn renderer(store);\n\t\t}\n\t}\n}\n\nexport default StoreProvider;\n"]}