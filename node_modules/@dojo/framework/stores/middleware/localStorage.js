(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "../../shim/global", "../process", "../state/operations"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var global_1 = require("../../shim/global");
    var process_1 = require("../process");
    var operations_1 = require("../state/operations");
    function collector(id, getPaths) {
        return function () { return ({
            after: function (error, result) {
                var paths = getPaths(result.store.path);
                var data = paths.map(function (path) {
                    var state = result.get(path);
                    return { meta: { path: path.path }, state: state };
                });
                global_1.default.localStorage.setItem(id, JSON.stringify(data));
            }
        }); };
    }
    exports.collector = collector;
    function load(id, store) {
        var data = global_1.default.localStorage.getItem(id);
        if (data) {
            try {
                var parsedData = JSON.parse(data);
                var operations_2 = parsedData.map(function (item) {
                    return operations_1.add(store.path(item.meta.path), item.state);
                });
                process_1.processExecutor('local-storage-load', [function () { return operations_2; }], store, undefined, undefined, undefined)({});
            }
            catch (_a) {
                // do nothing?
            }
        }
    }
    exports.load = load;
});
//# sourceMappingURL=localStorage.js.map