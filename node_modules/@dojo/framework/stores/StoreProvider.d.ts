import WidgetBase from '../widget-core/WidgetBase';
import { DNode } from '../widget-core/interfaces';
import { Store, StatePaths, Path } from './Store';
export interface GetPaths<S = any> {
    (path: StatePaths<S>): Path<S, any>[];
}
export interface StoreProviderProperties<S = any> {
    renderer: (store: Store<S>) => DNode | DNode[];
    stateKey: string;
    paths?: GetPaths<S>;
}
export declare class StoreProvider<S = any> extends WidgetBase<StoreProviderProperties<S>, never> {
    private _handle;
    private _getStore(key);
    protected onChange(previousProperties: StoreProviderProperties, currentProperties: StoreProviderProperties): void;
    protected render(): DNode | DNode[];
}
export default StoreProvider;
