{"version":3,"file":"Projector.mjs","sourceRoot":"","sources":["Projector.ts"],"names":[],"mappings":"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","sourcesContent":["import { Constructor, DNode, WNode } from '../interfaces';\nimport WidgetBase from '../WidgetBase';\nimport { Handle } from '../../core/Destroyable';\nimport Registry from '../Registry';\nimport { renderer, Renderer } from './../vdom';\nimport { w } from '../d';\nimport { alwaysRender } from '../decorators/alwaysRender';\n\nexport enum ProjectorAttachState {\n\tAttached = 1,\n\tDetached\n}\n\nexport interface ProjectorProperties {\n\tregistry?: Registry;\n}\n\nexport interface ProjectorMixin<T extends WidgetBase> {\n\tappend(root?: Element): Handle;\n\tmerge(root?: Element): Handle;\n\tsandbox(doc?: Document): void;\n\tsetProperties(properties: T['properties'] & ProjectorProperties): void;\n\tsetChildren(children: DNode[]): void;\n\ttoHtml(): string;\n\tasync: boolean;\n\troot: Element;\n\tdestroy(): void;\n\treadonly projectorState: ProjectorAttachState;\n}\n\n@alwaysRender()\nclass ProjectorWidget extends WidgetBase<{ renderer: () => WNode }> {\n\tprotected render() {\n\t\treturn this.properties.renderer();\n\t}\n}\n\nexport function ProjectorMixin<P, T extends WidgetBase<P>>(Base: Constructor<T>): Constructor<ProjectorMixin<T>> {\n\tclass Projector {\n\t\tpublic projectorState: ProjectorAttachState;\n\t\tprivate _root: Element = document.body;\n\t\tprivate _async = true;\n\t\tprivate _children: DNode[];\n\t\tprivate _properties: P & ProjectorProperties = {} as P;\n\t\tprivate _widget: Constructor<T> = Base;\n\t\tprivate _renderer: Renderer | undefined;\n\t\tprivate _renderResult: WNode;\n\n\t\tpublic append(root: Element = this._root): Handle {\n\t\t\tthis._root = root;\n\t\t\tthis._renderResult = w(ProjectorWidget, {\n\t\t\t\trenderer: () => {\n\t\t\t\t\tconst { registry, ...props } = this._properties as any;\n\t\t\t\t\treturn w(this._widget, props, this._children);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis._renderer = renderer(() => this._renderResult);\n\t\t\tthis._renderer.mount({\n\t\t\t\tdomNode: root as HTMLElement,\n\t\t\t\tregistry: this._properties.registry,\n\t\t\t\tsync: !this.async\n\t\t\t});\n\t\t\tthis.projectorState = ProjectorAttachState.Attached;\n\t\t\treturn {\n\t\t\t\tdestroy() {}\n\t\t\t};\n\t\t}\n\n\t\tpublic merge(root: Element = document.body): Handle {\n\t\t\treturn this.append((root.parentNode as Element) || undefined);\n\t\t}\n\n\t\tpublic set root(root: Element) {\n\t\t\tif (this.projectorState === ProjectorAttachState.Attached) {\n\t\t\t\tthrow new Error('Projector already attached, cannot change root element');\n\t\t\t}\n\t\t\tthis._root = root;\n\t\t}\n\n\t\tpublic get root(): Element {\n\t\t\treturn this._root;\n\t\t}\n\n\t\tpublic get async(): boolean {\n\t\t\treturn this._async;\n\t\t}\n\n\t\tpublic set async(async: boolean) {\n\t\t\tif (this.projectorState === ProjectorAttachState.Attached) {\n\t\t\t\tthrow new Error('Projector already attached, cannot change async mode');\n\t\t\t}\n\t\t\tthis._async = async;\n\t\t}\n\n\t\tpublic sandbox(doc: Document = document): void {\n\t\t\tif (this.projectorState === ProjectorAttachState.Attached) {\n\t\t\t\tthrow new Error('Projector already attached, cannot create sandbox');\n\t\t\t}\n\t\t\tthis._async = false;\n\t\t\tthis.append(doc.createDocumentFragment() as any);\n\t\t}\n\n\t\tpublic setChildren(children: DNode[]): void {\n\t\t\tthis._children = children;\n\t\t\tif (this._renderer) {\n\t\t\t\tthis._renderer.invalidate();\n\t\t\t}\n\t\t}\n\n\t\tpublic setProperties(properties: P): void {\n\t\t\tthis._properties = properties;\n\t\t\tif (this._renderer) {\n\t\t\t\tthis._renderer.invalidate();\n\t\t\t}\n\t\t}\n\n\t\tpublic toHtml(): string {\n\t\t\tif (this.projectorState !== ProjectorAttachState.Attached) {\n\t\t\t\tthrow new Error('Projector is not attached, cannot return an HTML string of projection.');\n\t\t\t}\n\t\t\treturn (this._root.childNodes[0] as Element).outerHTML;\n\t\t}\n\n\t\tpublic destroy() {}\n\t}\n\n\treturn Projector;\n}\n\nexport default ProjectorMixin;\n"]}