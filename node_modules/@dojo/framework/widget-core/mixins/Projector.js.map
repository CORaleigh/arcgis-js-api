{"version":3,"file":"Projector.js","sourceRoot":"","sources":["Projector.ts"],"names":[],"mappings":";;;;;;;;;;;;IACA,4CAAuC;IAGvC,kCAA+C;IAC/C,0BAAyB;IACzB,2DAA0D;IAE1D,IAAY,oBAGX;IAHD,WAAY,oBAAoB;QAC/B,uEAAY,CAAA;QACZ,uEAAQ,CAAA;IACT,CAAC,EAHW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAG/B;IAoBD;QAA8B,2CAAqC;QAAnE;;QAIA,CAAC;QAHU,gCAAM,GAAhB;YACC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;QACnC,CAAC;QAHI,eAAe;YADpB,2BAAY,EAAE;WACT,eAAe,CAIpB;QAAD,sBAAC;KAAA,AAJD,CAA8B,oBAAU,GAIvC;IAED,wBAA2D,IAAoB;QAC9E;YAAA;gBAES,UAAK,GAAY,QAAQ,CAAC,IAAI,CAAC;gBAC/B,WAAM,GAAG,IAAI,CAAC;gBAEd,gBAAW,GAA4B,EAAO,CAAC;gBAC/C,YAAO,GAAmB,IAAI,CAAC;YAgFxC,CAAC;YA5EO,0BAAM,GAAb,UAAc,IAA0B;gBAAxC,iBAkBC;gBAlBa,qBAAA,EAAA,OAAgB,IAAI,CAAC,KAAK;gBACvC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,aAAa,GAAG,KAAC,CAAC,eAAe,EAAE;oBACvC,QAAQ,EAAE;wBACT,IAAM,sBAAgD,EAA9C,sBAAQ,EAAE,wCAAoC,CAAC;wBACvD,MAAM,CAAC,KAAC,CAAC,KAAI,CAAC,OAAO,EAAE,KAAK,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC;oBAC/C,CAAC;iBACD,CAAC,CAAC;gBACH,IAAI,CAAC,SAAS,GAAG,eAAQ,CAAC,cAAM,OAAA,KAAI,CAAC,aAAa,EAAlB,CAAkB,CAAC,CAAC;gBACpD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;oBACpB,OAAO,EAAE,IAAmB;oBAC5B,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;oBACnC,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK;iBACjB,CAAC,CAAC;gBACH,IAAI,CAAC,cAAc,GAAG,oBAAoB,CAAC,QAAQ,CAAC;gBACpD,MAAM,CAAC;oBACN,OAAO,gBAAI,CAAC;iBACZ,CAAC;YACH,CAAC;YAEM,yBAAK,GAAZ,UAAa,IAA6B;gBAA7B,qBAAA,EAAA,OAAgB,QAAQ,CAAC,IAAI;gBACzC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAE,IAAI,CAAC,UAAsB,IAAI,SAAS,CAAC,CAAC;YAC/D,CAAC;YAED,sBAAW,2BAAI;qBAOf;oBACC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;gBACnB,CAAC;qBATD,UAAgB,IAAa;oBAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,KAAK,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC3D,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;oBAC3E,CAAC;oBACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBACnB,CAAC;;;eAAA;YAMD,sBAAW,4BAAK;qBAAhB;oBACC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBACpB,CAAC;qBAED,UAAiB,KAAc;oBAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,KAAK,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC3D,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;oBACzE,CAAC;oBACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACrB,CAAC;;;eAPA;YASM,2BAAO,GAAd,UAAe,GAAwB;gBAAxB,oBAAA,EAAA,cAAwB;gBACtC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,KAAK,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAC3D,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;gBACtE,CAAC;gBACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,sBAAsB,EAAS,CAAC,CAAC;YAClD,CAAC;YAEM,+BAAW,GAAlB,UAAmB,QAAiB;gBACnC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBACpB,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;gBAC7B,CAAC;YACF,CAAC;YAEM,iCAAa,GAApB,UAAqB,UAAa;gBACjC,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;gBAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBACpB,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;gBAC7B,CAAC;YACF,CAAC;YAEM,0BAAM,GAAb;gBACC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,KAAK,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAC3D,MAAM,IAAI,KAAK,CAAC,wEAAwE,CAAC,CAAC;gBAC3F,CAAC;gBACD,MAAM,CAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAa,CAAC,SAAS,CAAC;YACxD,CAAC;YAEM,2BAAO,GAAd,cAAkB,CAAC;YACpB,gBAAC;QAAD,CAAC,AAtFD,IAsFC;QAED,MAAM,CAAC,SAAS,CAAC;IAClB,CAAC;IA1FD,wCA0FC;IAED,kBAAe,cAAc,CAAC","sourcesContent":["import { Constructor, DNode, WNode } from '../interfaces';\nimport WidgetBase from '../WidgetBase';\nimport { Handle } from '../../core/Destroyable';\nimport Registry from '../Registry';\nimport { renderer, Renderer } from './../vdom';\nimport { w } from '../d';\nimport { alwaysRender } from '../decorators/alwaysRender';\n\nexport enum ProjectorAttachState {\n\tAttached = 1,\n\tDetached\n}\n\nexport interface ProjectorProperties {\n\tregistry?: Registry;\n}\n\nexport interface ProjectorMixin<T extends WidgetBase> {\n\tappend(root?: Element): Handle;\n\tmerge(root?: Element): Handle;\n\tsandbox(doc?: Document): void;\n\tsetProperties(properties: T['properties'] & ProjectorProperties): void;\n\tsetChildren(children: DNode[]): void;\n\ttoHtml(): string;\n\tasync: boolean;\n\troot: Element;\n\tdestroy(): void;\n\treadonly projectorState: ProjectorAttachState;\n}\n\n@alwaysRender()\nclass ProjectorWidget extends WidgetBase<{ renderer: () => WNode }> {\n\tprotected render() {\n\t\treturn this.properties.renderer();\n\t}\n}\n\nexport function ProjectorMixin<P, T extends WidgetBase<P>>(Base: Constructor<T>): Constructor<ProjectorMixin<T>> {\n\tclass Projector {\n\t\tpublic projectorState: ProjectorAttachState;\n\t\tprivate _root: Element = document.body;\n\t\tprivate _async = true;\n\t\tprivate _children: DNode[];\n\t\tprivate _properties: P & ProjectorProperties = {} as P;\n\t\tprivate _widget: Constructor<T> = Base;\n\t\tprivate _renderer: Renderer | undefined;\n\t\tprivate _renderResult: WNode;\n\n\t\tpublic append(root: Element = this._root): Handle {\n\t\t\tthis._root = root;\n\t\t\tthis._renderResult = w(ProjectorWidget, {\n\t\t\t\trenderer: () => {\n\t\t\t\t\tconst { registry, ...props } = this._properties as any;\n\t\t\t\t\treturn w(this._widget, props, this._children);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis._renderer = renderer(() => this._renderResult);\n\t\t\tthis._renderer.mount({\n\t\t\t\tdomNode: root as HTMLElement,\n\t\t\t\tregistry: this._properties.registry,\n\t\t\t\tsync: !this.async\n\t\t\t});\n\t\t\tthis.projectorState = ProjectorAttachState.Attached;\n\t\t\treturn {\n\t\t\t\tdestroy() {}\n\t\t\t};\n\t\t}\n\n\t\tpublic merge(root: Element = document.body): Handle {\n\t\t\treturn this.append((root.parentNode as Element) || undefined);\n\t\t}\n\n\t\tpublic set root(root: Element) {\n\t\t\tif (this.projectorState === ProjectorAttachState.Attached) {\n\t\t\t\tthrow new Error('Projector already attached, cannot change root element');\n\t\t\t}\n\t\t\tthis._root = root;\n\t\t}\n\n\t\tpublic get root(): Element {\n\t\t\treturn this._root;\n\t\t}\n\n\t\tpublic get async(): boolean {\n\t\t\treturn this._async;\n\t\t}\n\n\t\tpublic set async(async: boolean) {\n\t\t\tif (this.projectorState === ProjectorAttachState.Attached) {\n\t\t\t\tthrow new Error('Projector already attached, cannot change async mode');\n\t\t\t}\n\t\t\tthis._async = async;\n\t\t}\n\n\t\tpublic sandbox(doc: Document = document): void {\n\t\t\tif (this.projectorState === ProjectorAttachState.Attached) {\n\t\t\t\tthrow new Error('Projector already attached, cannot create sandbox');\n\t\t\t}\n\t\t\tthis._async = false;\n\t\t\tthis.append(doc.createDocumentFragment() as any);\n\t\t}\n\n\t\tpublic setChildren(children: DNode[]): void {\n\t\t\tthis._children = children;\n\t\t\tif (this._renderer) {\n\t\t\t\tthis._renderer.invalidate();\n\t\t\t}\n\t\t}\n\n\t\tpublic setProperties(properties: P): void {\n\t\t\tthis._properties = properties;\n\t\t\tif (this._renderer) {\n\t\t\t\tthis._renderer.invalidate();\n\t\t\t}\n\t\t}\n\n\t\tpublic toHtml(): string {\n\t\t\tif (this.projectorState !== ProjectorAttachState.Attached) {\n\t\t\t\tthrow new Error('Projector is not attached, cannot return an HTML string of projection.');\n\t\t\t}\n\t\t\treturn (this._root.childNodes[0] as Element).outerHTML;\n\t\t}\n\n\t\tpublic destroy() {}\n\t}\n\n\treturn Projector;\n}\n\nexport default ProjectorMixin;\n"]}