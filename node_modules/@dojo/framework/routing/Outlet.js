(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "tslib", "../widget-core/WidgetBase", "../widget-core/decorators/alwaysRender", "../widget-core/decorators/diffProperty"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require("tslib");
    var WidgetBase_1 = require("../widget-core/WidgetBase");
    var alwaysRender_1 = require("../widget-core/decorators/alwaysRender");
    var diffProperty_1 = require("../widget-core/decorators/diffProperty");
    var Outlet = /** @class */ (function (_super) {
        tslib_1.__extends(Outlet, _super);
        function Outlet() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Outlet.prototype.onRouterKeyChange = function (current, next) {
            var _this = this;
            var _a = next.routerKey, routerKey = _a === void 0 ? 'router' : _a;
            var item = this.registry.getInjector(routerKey);
            if (this._handle) {
                this._handle.destroy();
                this._handle = undefined;
            }
            if (item) {
                this._handle = item.invalidator.on('invalidate', function () {
                    _this.invalidate();
                });
                this.own(this._handle);
            }
        };
        Outlet.prototype.onAttach = function () {
            if (!this._handle) {
                this.onRouterKeyChange(this.properties, this.properties);
            }
        };
        Outlet.prototype.render = function () {
            var _a = this.properties, renderer = _a.renderer, id = _a.id, _b = _a.routerKey, routerKey = _b === void 0 ? 'router' : _b;
            var item = this.registry.getInjector(routerKey);
            if (item) {
                var router = item.injector();
                var outletContext = router.getOutlet(id);
                if (outletContext) {
                    var queryParams = outletContext.queryParams, params = outletContext.params, type = outletContext.type, isError = outletContext.isError, isExact = outletContext.isExact;
                    var result = renderer({ queryParams: queryParams, params: params, type: type, isError: isError, isExact: isExact, router: router });
                    if (result) {
                        return result;
                    }
                }
            }
            return null;
        };
        tslib_1.__decorate([
            diffProperty_1.diffProperty('routerKey')
        ], Outlet.prototype, "onRouterKeyChange", null);
        Outlet = tslib_1.__decorate([
            alwaysRender_1.alwaysRender()
        ], Outlet);
        return Outlet;
    }(WidgetBase_1.WidgetBase));
    exports.Outlet = Outlet;
    exports.default = Outlet;
});
//# sourceMappingURL=Outlet.js.map