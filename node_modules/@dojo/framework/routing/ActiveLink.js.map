{"version":3,"file":"ActiveLink.js","sourceRoot":"","sources":["ActiveLink.ts"],"names":[],"mappings":"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","sourcesContent":["import WidgetBase from '../widget-core/WidgetBase';\nimport { WNode, SupportedClassName } from '../widget-core/interfaces';\nimport { w } from '../widget-core/d';\nimport diffProperty from '../widget-core/decorators/diffProperty';\nimport { LinkProperties } from './interfaces';\nimport Link from './Link';\nimport Router from './Router';\nimport { Handle } from '../shim/interfaces';\n\nexport interface ActiveLinkProperties extends LinkProperties {\n\tactiveClasses: SupportedClassName[];\n}\n\nfunction paramsEqual(linkParams: any = {}, contextParams: any = {}) {\n\treturn Object.keys(linkParams).every((key) => linkParams[key] === contextParams[key]);\n}\n\nexport class ActiveLink extends WidgetBase<ActiveLinkProperties> {\n\tprivate _outletHandle: Handle | undefined;\n\n\tprivate _renderLink(isActive = false) {\n\t\tlet { activeClasses, classes = [], ...props } = this.properties;\n\t\tclasses = Array.isArray(classes) ? classes : [classes];\n\t\tif (isActive) {\n\t\t\tclasses = [...classes, ...activeClasses];\n\t\t}\n\t\tprops = { ...props, classes };\n\t\treturn w(Link, props, this.children);\n\t}\n\n\t@diffProperty('to')\n\tprotected _onOutletPropertyChange(previous: ActiveLinkProperties, current: ActiveLinkProperties) {\n\t\tconst { to, routerKey = 'router' } = current;\n\t\tconst item = this.registry.getInjector<Router>(routerKey);\n\t\tif (this._outletHandle) {\n\t\t\tthis._outletHandle.destroy();\n\t\t\tthis._outletHandle = undefined;\n\t\t}\n\t\tif (item) {\n\t\t\tconst router = item.injector();\n\t\t\tthis._outletHandle = router.on('outlet', ({ outlet }) => {\n\t\t\t\tif (outlet.id === to) {\n\t\t\t\t\tthis.invalidate();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected render(): WNode {\n\t\tconst { to, routerKey = 'router', params } = this.properties;\n\t\tconst item = this.registry.getInjector<Router>(routerKey);\n\t\tif (!item) {\n\t\t\treturn this._renderLink();\n\t\t}\n\t\tconst router = item.injector();\n\t\tconst context = router.getOutlet(to);\n\n\t\tconst isActive = context && paramsEqual(params, context.params);\n\n\t\treturn this._renderLink(isActive);\n\t}\n}\n\nexport default ActiveLink;\n"]}