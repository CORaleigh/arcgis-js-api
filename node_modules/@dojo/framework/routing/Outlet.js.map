{"version":3,"file":"Outlet.js","sourceRoot":"","sources":["Outlet.ts"],"names":[],"mappings":";;;;;;;;;;;;IACA,wDAAuD;IACvD,uEAAsE;IAGtE,uEAAsE;IAUtE;QAA4B,kCAA4B;QAAxD;;QA0CA,CAAC;QAtCU,kCAAiB,GAA3B,UAA4B,OAAyB,EAAE,IAAsB;YAD7E,iBAcC;YAZQ,IAAA,mBAAoB,EAApB,yCAAoB,CAAU;YACtC,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAS,SAAS,CAAC,CAAC;YAC1D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;gBACvB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;YAC1B,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,YAAY,EAAE;oBAChD,KAAI,CAAC,UAAU,EAAE,CAAC;gBACnB,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACxB,CAAC;QACF,CAAC;QAES,yBAAQ,GAAlB;YACC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAC1D,CAAC;QACF,CAAC;QAES,uBAAM,GAAhB;YACO,IAAA,oBAAwD,EAAtD,sBAAQ,EAAE,UAAE,EAAE,iBAAoB,EAApB,yCAAoB,CAAqB;YAC/D,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAS,SAAS,CAAC,CAAC;YAE1D,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACV,IAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAC/B,IAAM,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;gBAC3C,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;oBACX,IAAA,uCAAW,EAAE,6BAAM,EAAE,yBAAI,EAAE,+BAAO,EAAE,+BAAO,CAAmB;oBACtE,IAAM,MAAM,GAAG,QAAQ,CAAC,EAAE,WAAW,aAAA,EAAE,MAAM,QAAA,EAAE,IAAI,MAAA,EAAE,OAAO,SAAA,EAAE,OAAO,SAAA,EAAE,MAAM,QAAA,EAAE,CAAC,CAAC;oBACjF,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACZ,MAAM,CAAC,MAAM,CAAC;oBACf,CAAC;gBACF,CAAC;YACF,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QArCD;YADC,2BAAY,CAAC,WAAW,CAAC;uDAczB;QAjBW,MAAM;YADlB,2BAAY,EAAE;WACF,MAAM,CA0ClB;QAAD,aAAC;KAAA,AA1CD,CAA4B,uBAAU,GA0CrC;IA1CY,wBAAM;IA4CnB,kBAAe,MAAM,CAAC","sourcesContent":["import { DNode } from '../widget-core/interfaces';\nimport { WidgetBase } from '../widget-core/WidgetBase';\nimport { alwaysRender } from '../widget-core/decorators/alwaysRender';\nimport { MatchDetails } from './interfaces';\nimport { Router } from './Router';\nimport { diffProperty } from '../widget-core/decorators/diffProperty';\nimport { Handle } from '../core/Destroyable';\n\nexport interface OutletProperties {\n\trenderer: (matchDetails: MatchDetails) => DNode | DNode[];\n\tid: string;\n\trouterKey?: string;\n}\n\n@alwaysRender()\nexport class Outlet extends WidgetBase<OutletProperties> {\n\tprivate _handle: Handle | undefined;\n\n\t@diffProperty('routerKey')\n\tprotected onRouterKeyChange(current: OutletProperties, next: OutletProperties) {\n\t\tconst { routerKey = 'router' } = next;\n\t\tconst item = this.registry.getInjector<Router>(routerKey);\n\t\tif (this._handle) {\n\t\t\tthis._handle.destroy();\n\t\t\tthis._handle = undefined;\n\t\t}\n\t\tif (item) {\n\t\t\tthis._handle = item.invalidator.on('invalidate', () => {\n\t\t\t\tthis.invalidate();\n\t\t\t});\n\t\t\tthis.own(this._handle);\n\t\t}\n\t}\n\n\tprotected onAttach() {\n\t\tif (!this._handle) {\n\t\t\tthis.onRouterKeyChange(this.properties, this.properties);\n\t\t}\n\t}\n\n\tprotected render(): DNode | DNode[] {\n\t\tconst { renderer, id, routerKey = 'router' } = this.properties;\n\t\tconst item = this.registry.getInjector<Router>(routerKey);\n\n\t\tif (item) {\n\t\t\tconst router = item.injector();\n\t\t\tconst outletContext = router.getOutlet(id);\n\t\t\tif (outletContext) {\n\t\t\t\tconst { queryParams, params, type, isError, isExact } = outletContext;\n\t\t\t\tconst result = renderer({ queryParams, params, type, isError, isExact, router });\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport default Outlet;\n"]}