{"version":3,"file":"Outlet.mjs","sourceRoot":"","sources":["Outlet.ts"],"names":[],"mappings":";AACA,OAAO,EAAE,UAAU,EAAE,MAAM,2BAA2B,CAAC;AACvD,OAAO,EAAE,YAAY,EAAE,MAAM,wCAAwC,CAAC;AAGtE,OAAO,EAAE,YAAY,EAAE,MAAM,wCAAwC,CAAC;AAUtE,IAAa,MAAM,GAAnB,YAAoB,SAAQ,UAA4B;IAI7C,iBAAiB,CAAC,OAAyB,EAAE,IAAsB;QAC5E,MAAM,EAAE,SAAS,GAAG,QAAQ,EAAE,GAAG,IAAI,CAAC;QACtC,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAS,SAAS,CAAC,CAAC;QAC1D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QAC1B,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,YAAY,EAAE,GAAG,EAAE;gBACrD,IAAI,CAAC,UAAU,EAAE,CAAC;YACnB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACxB,CAAC;IACF,CAAC;IAES,QAAQ;QACjB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAC1D,CAAC;IACF,CAAC;IAES,MAAM;QACf,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,SAAS,GAAG,QAAQ,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;QAC/D,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAS,SAAS,CAAC,CAAC;QAE1D,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC/B,MAAM,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YAC3C,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBACnB,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,aAAa,CAAC;gBACtE,MAAM,MAAM,GAAG,QAAQ,CAAC,EAAE,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;gBACjF,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACZ,MAAM,CAAC,MAAM,CAAC;gBACf,CAAC;YACF,CAAC;QACF,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACb,CAAC;CACD,CAAA;AAtCA;IADC,YAAY,CAAC,WAAW,CAAC;+CAczB;AAjBW,MAAM;IADlB,YAAY,EAAE;GACF,MAAM,CA0ClB;SA1CY,MAAM;AA4CnB,eAAe,MAAM,CAAC","sourcesContent":["import { DNode } from '../widget-core/interfaces';\nimport { WidgetBase } from '../widget-core/WidgetBase';\nimport { alwaysRender } from '../widget-core/decorators/alwaysRender';\nimport { MatchDetails } from './interfaces';\nimport { Router } from './Router';\nimport { diffProperty } from '../widget-core/decorators/diffProperty';\nimport { Handle } from '../core/Destroyable';\n\nexport interface OutletProperties {\n\trenderer: (matchDetails: MatchDetails) => DNode | DNode[];\n\tid: string;\n\trouterKey?: string;\n}\n\n@alwaysRender()\nexport class Outlet extends WidgetBase<OutletProperties> {\n\tprivate _handle: Handle | undefined;\n\n\t@diffProperty('routerKey')\n\tprotected onRouterKeyChange(current: OutletProperties, next: OutletProperties) {\n\t\tconst { routerKey = 'router' } = next;\n\t\tconst item = this.registry.getInjector<Router>(routerKey);\n\t\tif (this._handle) {\n\t\t\tthis._handle.destroy();\n\t\t\tthis._handle = undefined;\n\t\t}\n\t\tif (item) {\n\t\t\tthis._handle = item.invalidator.on('invalidate', () => {\n\t\t\t\tthis.invalidate();\n\t\t\t});\n\t\t\tthis.own(this._handle);\n\t\t}\n\t}\n\n\tprotected onAttach() {\n\t\tif (!this._handle) {\n\t\t\tthis.onRouterKeyChange(this.properties, this.properties);\n\t\t}\n\t}\n\n\tprotected render(): DNode | DNode[] {\n\t\tconst { renderer, id, routerKey = 'router' } = this.properties;\n\t\tconst item = this.registry.getInjector<Router>(routerKey);\n\n\t\tif (item) {\n\t\t\tconst router = item.injector();\n\t\t\tconst outletContext = router.getOutlet(id);\n\t\t\tif (outletContext) {\n\t\t\t\tconst { queryParams, params, type, isError, isExact } = outletContext;\n\t\t\t\tconst result = renderer({ queryParams, params, type, isError, isExact, router });\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport default Outlet;\n"]}