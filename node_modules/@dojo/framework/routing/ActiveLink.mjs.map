{"version":3,"file":"ActiveLink.mjs","sourceRoot":"","sources":["ActiveLink.ts"],"names":[],"mappings":";AAAA,OAAO,UAAU,MAAM,2BAA2B,CAAC;AAEnD,OAAO,EAAE,CAAC,EAAE,MAAM,kBAAkB,CAAC;AACrC,OAAO,YAAY,MAAM,wCAAwC,CAAC;AAElE,OAAO,IAAI,MAAM,QAAQ,CAAC;AAQ1B,qBAAqB,aAAkB,EAAE,EAAE,gBAAqB,EAAE;IACjE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;AACvF,CAAC;AAED,MAAM,iBAAkB,SAAQ,UAAgC;IAGvD,WAAW,CAAC,QAAQ,GAAG,KAAK;QACnC,IAAI,oBAA2D,EAA3D,EAAE,aAAa,EAAE,OAAO,GAAG,EAAE,OAA8B,EAA5B,wDAA4B,CAAC;QAChE,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACvD,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACd,OAAO,GAAG,CAAC,GAAG,OAAO,EAAE,GAAG,aAAa,CAAC,CAAC;QAC1C,CAAC;QACD,KAAK,qBAAQ,KAAK,IAAE,OAAO,GAAE,CAAC;QAC9B,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAGS,uBAAuB,CAAC,QAA8B,EAAE,OAA6B;QAC9F,MAAM,EAAE,EAAE,EAAE,SAAS,GAAG,QAAQ,EAAE,GAAG,OAAO,CAAC;QAC7C,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAS,SAAS,CAAC,CAAC;QAC1D,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;QAChC,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC/B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE;gBACvD,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;oBACtB,IAAI,CAAC,UAAU,EAAE,CAAC;gBACnB,CAAC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;IACF,CAAC;IAES,MAAM;QACf,MAAM,EAAE,EAAE,EAAE,SAAS,GAAG,QAAQ,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;QAC7D,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAS,SAAS,CAAC,CAAC;QAC1D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QAC3B,CAAC;QACD,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC/B,MAAM,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAErC,MAAM,QAAQ,GAAG,OAAO,IAAI,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAEhE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;CACD;AA9BA;IADC,YAAY,CAAC,IAAI,CAAC;yDAgBlB;AAiBF,eAAe,UAAU,CAAC","sourcesContent":["import WidgetBase from '../widget-core/WidgetBase';\nimport { WNode, SupportedClassName } from '../widget-core/interfaces';\nimport { w } from '../widget-core/d';\nimport diffProperty from '../widget-core/decorators/diffProperty';\nimport { LinkProperties } from './interfaces';\nimport Link from './Link';\nimport Router from './Router';\nimport { Handle } from '../shim/interfaces';\n\nexport interface ActiveLinkProperties extends LinkProperties {\n\tactiveClasses: SupportedClassName[];\n}\n\nfunction paramsEqual(linkParams: any = {}, contextParams: any = {}) {\n\treturn Object.keys(linkParams).every((key) => linkParams[key] === contextParams[key]);\n}\n\nexport class ActiveLink extends WidgetBase<ActiveLinkProperties> {\n\tprivate _outletHandle: Handle | undefined;\n\n\tprivate _renderLink(isActive = false) {\n\t\tlet { activeClasses, classes = [], ...props } = this.properties;\n\t\tclasses = Array.isArray(classes) ? classes : [classes];\n\t\tif (isActive) {\n\t\t\tclasses = [...classes, ...activeClasses];\n\t\t}\n\t\tprops = { ...props, classes };\n\t\treturn w(Link, props, this.children);\n\t}\n\n\t@diffProperty('to')\n\tprotected _onOutletPropertyChange(previous: ActiveLinkProperties, current: ActiveLinkProperties) {\n\t\tconst { to, routerKey = 'router' } = current;\n\t\tconst item = this.registry.getInjector<Router>(routerKey);\n\t\tif (this._outletHandle) {\n\t\t\tthis._outletHandle.destroy();\n\t\t\tthis._outletHandle = undefined;\n\t\t}\n\t\tif (item) {\n\t\t\tconst router = item.injector();\n\t\t\tthis._outletHandle = router.on('outlet', ({ outlet }) => {\n\t\t\t\tif (outlet.id === to) {\n\t\t\t\t\tthis.invalidate();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected render(): WNode {\n\t\tconst { to, routerKey = 'router', params } = this.properties;\n\t\tconst item = this.registry.getInjector<Router>(routerKey);\n\t\tif (!item) {\n\t\t\treturn this._renderLink();\n\t\t}\n\t\tconst router = item.injector();\n\t\tconst context = router.getOutlet(to);\n\n\t\tconst isActive = context && paramsEqual(params, context.params);\n\n\t\treturn this._renderLink(isActive);\n\t}\n}\n\nexport default ActiveLink;\n"]}