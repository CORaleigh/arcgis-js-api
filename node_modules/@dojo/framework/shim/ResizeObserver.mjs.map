{"version":3,"file":"ResizeObserver.mjs","sourceRoot":"","sources":["ResizeObserver.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,UAAU,CAAC;AAC9B,OAAO,GAAG,MAAM,YAAY,CAAC;AAC7B,qBAAqB,CAAC;AACtB,OAAO,MAAM,MAAM,0BAA0B,CAAC;AA8B9C,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IACzB,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;QAC5B,MAAM,CAAC,cAAc,GAAG,MAAM,CAAC;IAChC,CAAC;AACF,CAAC;AAED,eAAe,MAAM,CAAC,cAAgC,CAAC","sourcesContent":["import global from './global';\nimport has from '../has/has';\n`!has('build-elide')`;\nimport Resize from 'resize-observer-polyfill';\n\nexport interface DOMRectReadOnly {\n\treadonly x: number;\n\treadonly y: number;\n\treadonly width: number;\n\treadonly height: number;\n\treadonly top: number;\n\treadonly right: number;\n\treadonly bottom: number;\n\treadonly left: number;\n}\n\nexport interface ResizeObserverCallback {\n\t(entries: ResizeObserverEntry[], observer: ResizeObserver): void;\n}\n\nexport interface ResizeObserverEntry {\n\treadonly target: Element;\n\treadonly contentRect: DOMRectReadOnly;\n}\n\nexport interface ResizeObserver {\n\tprototype: ResizeObserver;\n\tnew (callback: ResizeObserverCallback): ResizeObserver;\n\tobserve(target: Element): void;\n\tunobserve(target: Element): void;\n\tdisconnect(): void;\n}\n\nif (!has('build-elide')) {\n\tif (!global.ResizeObserver) {\n\t\tglobal.ResizeObserver = Resize;\n\t}\n}\n\nexport default global.ResizeObserver as ResizeObserver;\n"]}