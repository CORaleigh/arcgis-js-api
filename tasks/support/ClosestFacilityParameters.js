// COPYRIGHT Â© 2018 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.11/esri/copyright.txt for details.

define(["require","exports","../../core/tsSupport/declareExtendsHelper","../../core/tsSupport/decorateHelper","../../geometry","../../core/JSONSupport","../../core/kebabDictionary","../../core/accessorSupport/decorators"],function(e,r,t,i,o,s,n,p){var a=new n.default({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),l=new n.default({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),u=new n.default({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"}),y=new n.default({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),d=new n.default({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),c=new n.default({esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),m=new n.default({esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriYards:"yards"});return function(e){function r(r){var t=e.call(this)||this;return t.accumulateAttributes=null,t.attributeParameterValues=null,t.defaultCutoff=null,t.defaultTargetFacilityCount=null,t.directionsLanguage=null,t.directionsLengthUnits=null,t.directionsOutputType=null,t.directionsStyleName=null,t.directionsTimeAttribute=null,t.doNotLocateOnRestrictedElements=!0,t.facilities=null,t.impedanceAttribute=null,t.incidents=null,t.outputGeometryPrecision=null,t.outputGeometryPrecisionUnits=null,t.outputLines=null,t.outSpatialReference=null,t.pointBarriers=null,t.polygonBarriers=null,t.polylineBarriers=null,t.restrictionAttributes=null,t.restrictUTurns=null,t.returnDirections=!1,t.returnFacilities=!1,t.returnIncidents=!1,t.returnPointBarriers=!1,t.returnPolygonBarriers=!1,t.returnPolylineBarriers=!1,t.returnRoutes=!0,t.timeOfDay=null,t.timeOfDayUsage=null,t.travelDirection=null,t.travelMode=null,t.useHierarchy=!1,t}return t(r,e),i([p.property({type:[String],json:{write:!0}})],r.prototype,"accumulateAttributes",void 0),i([p.property({json:{write:!0}})],r.prototype,"attributeParameterValues",void 0),i([p.property({type:Number,json:{write:!0}})],r.prototype,"defaultCutoff",void 0),i([p.property({type:Number,json:{write:!0}})],r.prototype,"defaultTargetFacilityCount",void 0),i([p.property({type:String,json:{write:!0}})],r.prototype,"directionsLanguage",void 0),i([p.property({type:l.apiValues,json:{read:{reader:l.read},write:{writer:l.write}}})],r.prototype,"directionsLengthUnits",void 0),i([p.property({type:y.apiValues,json:{read:{reader:y.read},write:{writer:y.write}}})],r.prototype,"directionsOutputType",void 0),i([p.property({type:String,json:{write:!0}})],r.prototype,"directionsStyleName",void 0),i([p.property({type:String,json:{write:!0}})],r.prototype,"directionsTimeAttribute",void 0),i([p.property({type:Boolean,json:{write:!0}})],r.prototype,"doNotLocateOnRestrictedElements",void 0),i([p.property({json:{write:!0}})],r.prototype,"facilities",void 0),i([p.property({type:String,json:{write:!0}})],r.prototype,"impedanceAttribute",void 0),i([p.property({json:{write:!0}})],r.prototype,"incidents",void 0),i([p.property({type:Number,json:{write:!0}})],r.prototype,"outputGeometryPrecision",void 0),i([p.property({type:m.apiValues,json:{read:{reader:m.read},write:{writer:m.write}}})],r.prototype,"outputGeometryPrecisionUnits",void 0),i([p.property({type:a.apiValues,json:{read:{reader:a.read},write:{writer:a.write}}})],r.prototype,"outputLines",void 0),i([p.property({type:o.SpatialReference,json:{write:!0}})],r.prototype,"outSpatialReference",void 0),i([p.property({json:{write:!0}})],r.prototype,"pointBarriers",void 0),i([p.property({json:{write:!0}})],r.prototype,"polygonBarriers",void 0),i([p.property({json:{write:!0}})],r.prototype,"polylineBarriers",void 0),i([p.property({type:[String],json:{write:!0}})],r.prototype,"restrictionAttributes",void 0),i([p.property({type:u.apiValues,json:{read:{reader:u.read},write:{writer:u.write}}})],r.prototype,"restrictUTurns",void 0),i([p.property({type:Boolean,json:{write:!0}})],r.prototype,"returnDirections",void 0),i([p.property({type:Boolean,json:{write:!0}})],r.prototype,"returnFacilities",void 0),i([p.property({type:Boolean,json:{write:!0}})],r.prototype,"returnIncidents",void 0),i([p.property({type:Boolean,json:{write:!0}})],r.prototype,"returnPointBarriers",void 0),i([p.property({type:Boolean,json:{write:!0}})],r.prototype,"returnPolygonBarriers",void 0),i([p.property({type:Boolean,json:{write:!0}})],r.prototype,"returnPolylineBarriers",void 0),i([p.property({type:Boolean,json:{write:!0}})],r.prototype,"returnRoutes",void 0),i([p.property({type:Date,json:{type:Number,write:!0}})],r.prototype,"timeOfDay",void 0),i([p.property({type:c.apiValues,json:{read:{reader:c.read},write:{writer:c.write}}})],r.prototype,"timeOfDayUsage",void 0),i([p.property({type:d.apiValues,json:{read:{reader:d.read},write:{writer:d.write}}})],r.prototype,"travelDirection",void 0),i([p.property({json:{write:!0}})],r.prototype,"travelMode",void 0),i([p.property({type:Boolean,json:{write:!0}})],r.prototype,"useHierarchy",void 0),r=i([p.subclass("esri.tasks.support.ClosestFacilityParameters")],r)}(p.declared(s))});