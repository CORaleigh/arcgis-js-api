// COPYRIGHT Â© 2018 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.11/esri/copyright.txt for details.

define(["require","exports","../../../../../core/tsSupport/extendsHelper","../../../../../core/screenUtils","../../../../../core/libs/gl-matrix-2/mat4","../../../../../core/libs/gl-matrix-2/mat4f64","../../../../../core/libs/gl-matrix-2/vec2","../../../../../core/libs/gl-matrix-2/vec3","../../../../../core/libs/gl-matrix-2/vec3f64","../../../camera/constraintUtils","../../../input/util","../InteractiveController","../momentum/PanPlanarMomentumController","../momentum/PanSphericalMomentumController","../momentum/RotationMomentumController","../momentum/ZoomPlanarMomentumController","../momentum/ZoomSphericalMomentumController","../../utils/navigationUtils","../../utils/navigationUtils","../../../support/geometryUtils","../../../support/mathUtils","../../../webgl-engine/lib/Camera","../../../../navigation/PanPlanarMomentumEstimator","../../../../navigation/PanSphericalMomentumEstimator","../../../../navigation/RotationMomentumEstimator","../../../../navigation/ZoomMomentumEstimator"],function(t,e,i,n,a,r,o,s,c,h,m,p,l,P,u,d,g,v,S,M,b,y,C,A,f,w){Object.defineProperty(e,"__esModule",{value:!0});var x={aboveGround:.25,belowGround:.025},O=function(t){function e(e,i){var a=t.call(this)||this;return a.view=e,a.intersectionHelper=i,a.smoothRotation=new m.ExponentialFalloff(.05),a.rotationAxis=c.vec3f64.create(),a.panningPlane=M.plane.create(),a.smoothScaling=new m.ExponentialFalloff(.05),a.zoomCenterScreen=n.createScreenPointArray(),a.zoomMomentumEstimator=new w.ZoomMomentumEstimator,a.rotationMomentumEstimator=new f.RotationMomentumEstimator,a.panSphericalMomentumEstimator=new A.PanSphericalMomentumEstimator,a.panPlanarMomentumEstimator=new C.PanPlanarMomentumEstimator,a.adjustedSphere=M.sphere.create(),a.tmp3d=c.vec3f64.create(),a.tmpMat=r.mat4f64.create(),a.tmpAxisAngle=M.axisAngle.create(),a.tmpScreenPointArray=n.createScreenPointArray(),a.beginScreenPoint=n.createScreenPointArray(),a.beginScenePoint=c.vec3f64.create(),a.screenPickPoint=n.createScreenPointArray(),a.panMode=S.PanMode.Horizontal,a.tmpInteractionDirection=c.vec3f64.create(),a.constraintOptions={selection:15,interactionType:0,interactionFactor:0,interactionStartCamera:new y,interactionDirection:null,tiltMode:0},a}return i(e,t),e.prototype.begin=function(t){if(this.active){this.beginHeading=-b.cyclicalPI.normalize(b.deg2rad(this.view.camera.heading)),this.beginRadius=t.radius,this.pointerCount=t.pointers.size,this.beginAngle=t.angle,this.smoothRotation.reset(),n.screenPointObjectToArray(t.center,this.screenPickPoint),o.vec2.copy(this.beginScreenPoint,this.screenPickPoint);var e=v.pickPointAndInitSphere(this.intersectionHelper,this.beginCamera,this.screenPickPoint,!0);this.scenePickPoint=e.scenePickPoint,this.sphere=e.sphere,s.vec3.copy(this.beginScenePoint,this.scenePickPoint),this.panMode=v.decidePanMode(this.beginCamera,this.sphere,this.scenePickPoint),this.panMode===S.PanMode.Vertical&&(this.beginCamera.aboveGround?this.preparePlanarPanModeOverground(t):this.preparePlanarPanMode(t)),this.constraintOptions.interactionStartCamera.copyFrom(this.beginCamera)}},e.prototype.preparePlanarPanModeOverground=function(t){var e=s.vec3.negate(this.tmp3d,this.beginCamera.viewForward);M.plane.fromPositionAndNormal(this.scenePickPoint,e,this.panningPlane);var i=n.createScreenPointArray(this.screenPickPoint[0],0),a=c.vec3f64.create(),r=s.vec3.length(this.beginCamera.eye);this.adjustedSphere.radius=r<this.sphere.radius?r-100:this.sphere.radius,v.sphereOrPlanePointFromScreenPoint(this.adjustedSphere,this.beginCamera,i,a);var o=n.createRenderScreenPointArray3();this.beginCamera.projectPoint(a,o);var h=.9*o[1];this.screenPickPoint[1]=Math.min(this.screenPickPoint[1],h),this.intersectionHelper.intersectScreen(this.screenPickPoint,this.scenePickPoint)&&M.plane.fromPositionAndNormal(this.scenePickPoint,this.panningPlane,this.panningPlane);var m=n.screenPointObjectToArray(t.center,this.tmpScreenPointArray);v.intersectPlaneFromScreenPoint(this.panningPlane,this.beginCamera,m,this.beginScenePoint)},e.prototype.preparePlanarPanMode=function(t){var e=s.vec3.negate(this.tmp3d,this.beginCamera.viewForward);M.plane.fromPositionAndNormal(this.scenePickPoint,e,this.panningPlane);var i=M.sphere.angleToSilhouette(this.sphere,this.currentCamera.eye),r=M.axisAngle.fromPoints(this.currentCamera.eye,this.scenePickPoint,this.tmpAxisAngle),o=this.currentCamera.aboveGround?x.aboveGround:x.belowGround,c=-r[3]-o*i;if(c>0){var h=a.mat4.identity(this.tmpMat);a.mat4.rotate(h,h,-c,r),s.vec3.subtract(this.scenePickPoint,this.scenePickPoint,this.sphere.center),s.vec3.transformMat4(this.scenePickPoint,this.scenePickPoint,h),s.vec3.add(this.scenePickPoint,this.scenePickPoint,this.sphere.center),M.plane.setOffsetFromPoint(this.panningPlane,this.scenePickPoint,this.panningPlane);var m=n.screenPointObjectToArray(t.center,this.tmpScreenPointArray);v.intersectPlaneFromScreenPoint(this.panningPlane,this.beginCamera,m,this.beginScenePoint)}},e.prototype.update=function(t){if(this.active){this.currentCamera.copyFrom(this.beginCamera);var e=t.pointers.size,i=e>1;this.panMode===S.PanMode.Horizontal?(i&&this.zoomSpherical(t),this.panningSpherical(t),i&&this.rotateSpherical(t)):(i&&this.zoomPlanar(t),this.panningPlanar(t),i&&this.rotatePlanar(t)),this.currentCamera.markViewDirty()}},e.prototype.end=function(t){t.pointers.size===this.pointerCount&&this.update(t),this.finishController();var e=this.zoomMomentumEstimator.evaluateMomentum();if(e)return this.panMode===S.PanMode.Horizontal?new g.ZoomSphericalMomentumController(this.view,e,this.zoomCenterScreen,this.beginScenePoint,this.sphere.radius):new d.ZoomPlanarMomentumController(this.view,e,this.beginScenePoint);var i=this.rotationMomentumEstimator.evaluateMomentum();if(i)return new u.RotationMomentumController(this.view,i,this.sphere.center,this.rotationAxis);if(this.panMode===S.PanMode.Horizontal){var n=this.panSphericalMomentumEstimator.evaluateMomentum();if(n)return new P.PanSphericalMomentumController(this.view,n)}else{var n=this.panPlanarMomentumEstimator.evaluateMomentum();if(n)return new l.PanPlanarMomentumController(this.view,n)}return null},e.prototype.zoomSpherical=function(t){var e=this.beginRadius/t.radius,i=.001875*Math.min(Math.max(t.radius,40),120);this.smoothScaling.gain=i,this.smoothScaling.update(e),v.applyZoomOnSphere(this.sphere,this.currentCamera,this.smoothScaling.value),n.screenPointObjectToArray(t.center,this.zoomCenterScreen),this.zoomMomentumEstimator.add(this.smoothScaling.value,.001*t.timestamp),this.constraintOptions.interactionType=1,this.constraintOptions.interactionFactor=h.pixelDistanceToInteractionFactor(t.radius-this.beginRadius),h.applyAll(this.view,this.currentCamera,this.constraintOptions)},e.prototype.panningSpherical=function(t){var e=n.screenPointObjectToArray(t.center,this.tmpScreenPointArray);v.sphereOrPlanePointFromScreenPoint(this.sphere,this.currentCamera,e,this.tmp3d),v.preserveHeadingThreshold(this.beginScenePoint,s.vec3.dot(this.currentCamera.up,this.beginScenePoint),this.sphere.radius,this.beginHeading,this.view.camera.tilt,this.beginCamera)?(v.applyPanSphericalPreserveHeading(this.sphere,this.currentCamera,this.beginScenePoint,this.tmp3d,this.beginHeading,this.view.camera.tilt,!1),this.panSphericalMomentumEstimator.addMomentumPreserveHeading(e,this.tmp3d,.001*t.timestamp,this.beginCamera,this.sphere,this.beginHeading,this.view.camera.tilt)):(v.applyPanSphericalDirectRotation(this.sphere,this.currentCamera,this.beginScenePoint,this.tmp3d,this.view.camera.tilt,!1),this.panSphericalMomentumEstimator.addMomentumDirectRotation(e,this.tmp3d,.001*t.timestamp,this.beginCamera,this.sphere.radius,this.view.camera.tilt)),this.constraintOptions.interactionType=4,this.constraintOptions.interactionFactor=h.pixelDistanceToInteractionFactor(this.screenPickPoint,e),h.applyAll(this.view,this.currentCamera,this.constraintOptions)},e.prototype.rotateSpherical=function(t){s.vec3.normalize(this.rotationAxis,this.scenePickPoint),this.currentCamera.aboveGround||s.vec3.negate(this.rotationAxis,this.rotationAxis);var e=this.smoothRotation.value,i=v.normalizeRotationDelta(t.angle-e),n=e+i,a=.00125*Math.min(Math.max(t.radius,40),120);this.smoothRotation.gain=a,this.smoothRotation.update(n);var r=this.smoothRotation.value-this.beginAngle;this.rotationMomentumEstimator.add(r,.001*t.timestamp),v.applyRotation(this.currentCamera,this.sphere.center,M.axisAngle.wrapAxisAngle(this.rotationAxis,r)),this.constraintOptions.interactionType=2,this.constraintOptions.interactionFactor=h.pixelDistanceToInteractionFactor(t.radius*n),h.applyAll(this.view,this.currentCamera,this.constraintOptions)},e.prototype.panningPlanar=function(t){var e=n.screenPointObjectToArray(t.center,this.tmpScreenPointArray);v.intersectPlaneFromScreenPoint(this.panningPlane,this.currentCamera,e,this.tmp3d)&&(v.applyPanPlanar(this.currentCamera,this.beginScenePoint,this.tmp3d),this.panPlanarMomentumEstimator.add(e,this.tmp3d,.001*t.timestamp),this.constraintOptions.interactionType=4,this.constraintOptions.interactionFactor=h.pixelDistanceToInteractionFactor(this.beginScreenPoint,e),this.constraintOptions.interactionDirection=this.view.renderCoordsHelper.worldUpAtPosition(this.currentCamera.eye,this.tmpInteractionDirection),h.applyAll(this.view,this.currentCamera,this.constraintOptions),this.constraintOptions.interactionDirection=null)},e.prototype.zoomPlanar=function(t){var e=this.beginRadius/t.radius,i=.001875*Math.min(Math.max(t.radius,40),120);this.smoothScaling.gain=i,this.smoothScaling.update(e),this.zoomMomentumEstimator.add(this.smoothScaling.value,.001*t.timestamp),v.applyZoomToPoint(this.currentCamera,this.beginScenePoint,this.smoothScaling.value,this.view.state.constraints.minimumPoiDistance),this.constraintOptions.interactionType=1,this.constraintOptions.interactionFactor=h.pixelDistanceToInteractionFactor(t.radius-this.beginRadius),h.applyAll(this.view,this.currentCamera,this.constraintOptions)},e.prototype.rotatePlanar=function(t){s.vec3.copy(this.rotationAxis,this.beginScenePoint);var e=this.smoothRotation.value,i=t.angle-e;i=v.normalizeRotationDelta(i);var n=e+i,a=.00125*Math.min(Math.max(t.radius,40),120);this.smoothRotation.gain=a,this.smoothRotation.update(n);var r=this.smoothRotation.value-this.beginAngle;this.rotationMomentumEstimator.add(r,.001*t.timestamp),v.applyRotation(this.currentCamera,this.sphere.center,M.axisAngle.wrapAxisAngle(this.rotationAxis,r)),this.constraintOptions.interactionType=2,this.constraintOptions.interactionFactor=h.pixelDistanceToInteractionFactor(t.radius*r),h.applyAll(this.view,this.currentCamera,this.constraintOptions)},e}(p.InteractiveController);e.PinchAndPanController=O});