// COPYRIGHT Â© 2018 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.11/esri/copyright.txt for details.

define(["require","exports","./MemoryRequirements","./TileBufferData","./TileDisplayData","./Utils","./Utils","./WGLDisplayObject","./WGLDisplayRecord","./mesh/VertexBuffer","./util/Reader","./util/serializationUtils","./util/Writer"],function(e,t,r,A,F,z,R,i,B,s,f,l,a){var C=new r.default,_=new r.default;function c(e,t){var r={};for(var a in e){var i={data:R.allocateTypedArrayBuffer(t,e[a]),stride:e[a]};r[a]=i}return r}return function(){function O(){this.tileDisplayData=null,this.tileBufferData=null}return O.prototype.reshuffle=function(){C.reset();for(var e=F.groupRecordsByGeometryType(this.tileDisplayData.displayObjects),t=0,r=e;t<r.length;t++)for(var a=0,i=h=r[t];a<i.length;a++){(c=i[a])&&C.needMore(c.geometryType,c.meshData?c.meshData.vertexCount:c.vertexCount,c.meshData?c.meshData.indexData.length:c.indexCount)}for(var s=e.length,f=new A,l=0;l<s;++l){f.geometries[l].indexBuffer=new Uint32Array(Math.round(1.15*C.indicesFor(l)));var n=[];for(var u in this.tileBufferData.geometries[l].vertexBuffer)n.push(this.tileBufferData.geometries[l].vertexBuffer[u].stride);var o=O._computeVertexAlignment(n),d=Math.round(1.15*C.verticesFor(l)),D=O._align(d,o);for(var p in this.tileBufferData.geometries[l].vertexBuffer){var v=this.tileBufferData.geometries[l].vertexBuffer[p].stride;f.geometries[l].vertexBuffer[p]={stride:v,data:R.allocateTypedArrayBuffer(D,v)}}}_.reset(),this.tileDisplayData.displayList.clear();for(l=0;l<s;++l){for(var h,y=0,B=h=e[l];y<B.length;y++){var c;if((c=B[y]).meshData)c.writeMeshDataToBuffers(_.verticesFor(l),f.geometries[l].vertexBuffer,_.indicesFor(l),f.geometries[l].indexBuffer),c.meshData=null;else{var g=this.tileBufferData.geometries[l].vertexBuffer,m=this.tileBufferData.geometries[l].indexBuffer,x=f.geometries[l].vertexBuffer,w=f.geometries[l].indexBuffer,M=_.verticesFor(l),b=_.indicesFor(l);z.copyMeshData(M,b,x,w,c,g,m),c.vertexFrom=M,c.indexFrom=b}_.needMore(l,c.vertexCount,c.indexCount)}this.tileDisplayData.displayList.unified||this.tileDisplayData.displayList.addToList(h)}if(this.tileDisplayData.displayList.unified)for(var T=0,L=this.tileDisplayData.displayObjects;T<L.length;T++){var j=L[T];this.tileDisplayData.displayList.addToList(j.displayRecords)}this.tileBufferData=f},O.prototype.getStrides=function(){for(var e=[],t=0;t<this.tileBufferData.geometries.length;++t){var r=this.tileBufferData.geometries[t];for(var a in e[t]={},r.vertexBuffer)e[t][a]=r.vertexBuffer[a].stride}return e},O.prototype.clone=function(){var e=new O;return e.tileBufferData=this.tileBufferData.clone(),e.tileDisplayData=this.tileDisplayData.clone(),e},O.prototype._guessSize=function(){for(var e=this.tileDisplayData.displayObjects,t=Math.min(e.length,4),r=0,a=0;a<t;a++)r=Math.max(r,e[a].displayRecords.length);return 2*(12*e.length+e.length*r*40)},O.prototype.serialize=function(){var e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),r=this.tileDisplayData.serialize(new a.default(Int32Array,this._guessSize())).buffer();return t.push(r),{result:{displayData:r,bufferData:e},transferList:t}},O.decode=function(e){var t=l.deserializeList(new f.default(e.displayObjects),i),r={};for(var a in e.vertexBuffersMap)r[a]=s.VertexBuffers.decode(e.vertexBuffersMap[a]);return O.fromMeshData({displayObjects:t,vertexBuffersMap:r})},O.fromMeshData=function(e){var t=new O,r=new F.default,a=new A;for(var i in r.displayObjects=e.displayObjects,e.vertexBuffersMap){var s=e.vertexBuffersMap[i];a.geometries[i].indexBuffer=s.indexBuffer,a.geometries[i].vertexBuffer=s.namedBuffers}return t.tileDisplayData=r,t.tileBufferData=a,t},O.bind=function(e,t){var r=new O;return r.tileDisplayData=e,r.tileBufferData=t,r},O.create=function(e,t){var r=new O;r.tileDisplayData=new F.default;for(var a=[0,0,0,0,0],i=[0,0,0,0,0],s=[[],[],[],[],[]],f=0,l=r.tileDisplayData.displayObjects=e;f<l.length;f++)for(var n=0,u=l[f].displayRecords;n<u.length;n++){var o=u[n];s[o.geometryType].push(o),a[o.geometryType]+=o.meshData.vertexCount,i[o.geometryType]+=o.meshData.indexData.length}for(var d,D=new A,p=[(d=t).fill||{},d.line||{},d.icon||{},d.text||{},d.label||{}],v=0;v<5;v++){var h=new Uint32Array(i[v]),y=c(p[v],a[v]);B.writeAllMeshDataToBuffers(s[v],y,h),D.geometries[v]={indexBuffer:h,vertexBuffer:y}}return r.tileBufferData=D,r},O._align=function(e,t){var r=e%t;return 0===r?e:e+(t-r)},O._computeVertexAlignment=function(e){for(var t=!1,r=!1,a=0,i=e;a<i.length;a++){var s=i[a];s%4==2?t=!0:s%4!=0&&(r=!0)}return r?4:t?2:1},O}()});